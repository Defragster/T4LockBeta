
PROGMEM char a1[] = 
  "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ"
  "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ"
  "KLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST"
  "UVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCD"
  "EFGHIJKLMNOPQRSTUVWXYZ123";
PROGMEM char a2[] = 
  "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"
  "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghij"
  "klmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrst"
  "uvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd"
  "efghijklmnopqrstuvwxyz123";
PROGMEM char z1[] = 
  "ZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBA"
  "ZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQ"
  "PONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHG"
  "FEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXWVUTSRQPONMLKJIHGFEDCBAZYXW"
  "VUTSRQPONMLKJIHGFEDCBA456";
PROGMEM char z2[] = 
  "zyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcba"
  "zyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcbazyxwvutsrq"
  "ponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihg"
  "fedcbazyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcbazyxwvutsrqponmlkjihgfedcbazyxw"
  "vutsrqponmlkjihgfedcba456";

char szPi[PI_DIGITS_SZ];

DATA_PLACE char szMyPi1[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc4( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi4[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc4( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc5( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi4) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi5[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc5( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc6( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi5) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi6[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc6( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc7( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi6) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi7[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc7( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc8( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi7) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi8[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc8( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc9( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi8) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi9[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc9( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc10( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi9) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi10[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc10( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc11( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi10) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi11[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc11( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc12( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi11) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi12[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc12( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc13( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi12) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi13[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc13( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc14( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi13) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi14[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc14( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc15( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi14) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi15[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc15( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc16( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi15) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi16[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc16( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc17( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi16) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi17[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc17( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc18( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi17) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi18[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc18( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc19( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi18) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi19[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc19( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc20( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi19) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi20[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc20( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc21( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi20) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi21[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc21( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc22( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi21) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi22[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc22( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc23( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi22) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi23[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc23( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc24( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi23) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi24[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc24( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc25( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi24) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi25[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc25( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc26( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi25) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi26[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc26( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc27( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi26) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi27[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc27( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc28( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi27) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi28[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc28( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc29( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi28) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi29[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc29( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc30( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi29) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi30[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc30( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc31( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi30) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi31[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc31( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc32( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi31) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi32[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc32( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc33( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi32) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi33[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc33( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc34( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi33) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi34[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc34( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc35( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi34) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi35[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc35( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc36( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi35) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi36[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc36( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc37( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi36) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi37[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc37( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc38( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi37) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi38[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc38( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc39( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi38) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi39[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc39( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc40( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi39) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi40[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc40( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc41( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi40) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi41[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc41( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc42( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi41) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi42[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc42( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc43( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi42) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi43[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc43( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc44( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi43) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi44[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc44( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc45( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi44) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi45[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc45( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc46( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi45) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi46[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc46( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc47( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi46) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi47[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc47( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc48( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi47) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi48[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc48( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc49( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi48) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi49[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc49( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc50( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi49) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi50[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc50( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc51( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi50) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi51[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc51( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc52( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi51) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi52[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc52( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc53( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi52) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi53[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc53( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc54( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi53) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi54[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc54( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc55( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi54) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi55[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc55( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc56( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi55) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi56[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc56( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc57( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi56) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi57[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc57( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc58( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi57) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi58[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc58( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc59( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi58) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi59[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc59( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc60( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi59) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi60[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc60( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc61( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi60) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi61[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc61( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc62( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi61) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi62[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc62( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc63( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi62) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi63[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc63( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc64( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi63) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi64[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc64( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc65( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi64) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi65[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc65( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc66( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi65) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi66[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc66( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc67( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi66) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi67[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc67( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc68( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi67) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi68[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc68( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc69( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi68) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi69[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc69( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc70( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi69) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi70[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc70( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc71( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi70) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi71[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc71( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc72( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi71) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi72[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc72( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc73( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi72) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi73[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc73( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc74( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi73) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi74[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc74( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc75( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi74) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi75[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc75( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc76( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi75) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi76[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc76( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc77( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi76) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi77[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc77( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc78( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi77) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi78[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc78( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc79( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi78) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi79[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc79( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc80( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi79) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi80[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc80( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc81( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi80) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi81[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc81( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc82( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi81) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi82[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc82( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc83( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi82) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi83[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc83( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc84( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi83) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi84[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc84( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc85( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi84) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi85[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc85( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc86( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi85) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi86[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc86( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc87( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi86) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi87[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc87( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc88( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi87) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi88[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc88( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc89( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi88) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi89[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc89( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc90( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi89) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi90[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc90( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc91( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi90) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi91[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc91( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc92( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi91) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi92[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc92( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc93( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi92) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi93[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc93( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc94( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi93) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi94[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc94( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc95( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi94) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi95[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc95( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc96( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi95) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi96[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc96( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc97( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi96) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi97[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc97( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc98( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi97) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi98[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc98( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc99( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi98) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi99[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc99( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc100( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi99) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi100[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc100( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc101( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi100) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi101[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc101( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc102( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi101) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi102[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc102( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc103( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi102) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi103[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc103( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc104( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi103) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi104[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc104( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc105( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi104) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi105[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc105( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc106( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi105) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi106[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc106( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc107( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi106) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi107[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc107( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc108( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi107) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi108[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc108( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc109( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi108) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi109[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc109( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc110( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi109) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi110[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc110( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc111( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi110) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi111[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc111( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc112( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi111) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi112[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc112( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc113( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi112) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi113[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc113( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc114( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi113) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi114[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc114( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc115( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi114) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi115[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc115( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc116( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi115) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi116[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc116( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc117( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi116) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi117[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc117( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc118( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi117) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi118[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc118( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc119( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi118) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi119[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc119( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc120( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi119) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi120[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc120( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc121( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi120) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi121[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc121( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc122( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi121) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi122[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc122( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc123( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi122) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi123[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc123( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc124( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi123) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi124[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc124( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc125( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi124) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi125[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc125( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc126( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi125) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi126[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc126( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc127( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi126) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi127[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc127( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc128( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi127) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi128[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc128( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc129( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi128) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi129[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc129( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc130( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi129) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi130[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc130( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc131( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi130) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi131[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc131( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc132( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi131) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi132[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc132( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc133( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi132) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi133[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc133( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc134( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi133) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi134[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc134( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc135( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi134) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi135[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc135( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc136( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi135) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi136[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc136( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc137( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi136) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi137[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc137( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc138( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi137) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi138[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc138( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc139( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi138) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi139[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc139( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc140( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi139) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi140[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc140( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc141( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi140) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi141[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc141( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc142( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi141) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi142[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc142( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc143( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi142) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi143[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc143( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc144( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi143) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi144[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc144( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc145( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi144) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi145[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc145( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc146( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi145) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi146[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc146( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc147( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi146) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi147[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc147( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc148( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi147) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi148[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc148( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc149( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi148) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi149[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc149( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc150( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi149) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi150[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc150( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc151( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi150) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi151[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc151( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc152( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi151) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi152[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc152( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc153( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi152) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi153[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc153( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc154( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi153) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi154[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc154( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc155( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi154) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi155[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc155( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc156( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi155) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi156[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc156( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc157( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi156) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi157[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc157( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc158( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi157) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi158[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc158( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc159( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi158) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi159[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc159( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc160( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi159) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi160[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc160( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc161( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi160) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi161[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc161( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc162( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi161) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi162[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc162( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc163( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi162) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi163[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc163( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc164( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi163) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi164[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc164( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc165( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi164) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi165[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc165( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc166( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi165) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi166[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc166( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc167( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi166) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi167[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc167( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc168( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi167) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi168[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc168( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc169( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi168) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi169[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc169( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc170( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi169) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi170[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc170( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc171( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi170) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi171[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc171( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc172( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi171) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi172[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc172( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc173( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi172) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi173[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc173( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc174( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi173) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi174[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc174( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc175( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi174) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi175[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc175( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc176( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi175) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi176[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc176( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc177( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi176) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi177[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc177( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc178( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi177) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi178[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc178( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc179( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi178) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi179[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc179( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc180( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi179) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi180[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc180( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc181( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi180) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi181[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc181( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc182( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi181) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi182[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc182( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc183( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi182) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi183[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc183( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc184( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi183) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi184[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc184( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc185( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi184) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi185[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc185( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc186( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi185) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi186[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc186( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc187( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi186) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi187[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc187( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc188( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi187) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi188[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc188( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc189( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi188) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi189[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc189( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc190( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi189) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi190[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc190( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc191( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi190) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi191[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc191( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc192( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi191) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi192[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc192( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc193( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi192) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi193[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc193( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc194( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi193) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi194[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc194( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc195( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi194) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi195[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc195( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc196( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi195) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi196[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc196( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc197( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi196) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi197[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc197( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc198( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi197) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi198[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc198( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc199( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi198) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi199[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc199( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc200( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi199) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi200[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc200( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc201( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi200) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi201[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc201( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc202( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi201) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi202[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc202( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc203( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi202) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi203[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc203( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc204( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi203) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi204[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc204( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc205( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi204) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi205[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc205( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc206( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi205) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi206[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc206( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc207( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi206) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi207[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc207( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc208( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi207) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi208[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc208( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc209( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi208) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi209[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc209( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc210( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi209) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi210[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc210( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc211( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi210) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi211[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc211( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc212( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi211) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi212[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc212( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc213( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi212) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi213[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc213( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc214( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi213) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi214[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc214( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc215( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi214) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi215[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc215( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc216( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi215) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi216[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc216( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc217( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi216) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi217[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc217( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc218( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi217) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi218[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc218( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc219( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi218) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi219[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc219( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc220( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi219) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi220[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc220( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc221( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi220) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi221[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc221( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc222( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi221) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi222[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc222( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc223( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi222) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi223[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc223( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc224( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi223) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi224[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc224( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc225( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi224) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi225[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc225( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc226( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi225) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi226[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc226( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc227( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi226) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi227[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc227( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc228( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi227) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi228[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc228( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc229( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi228) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi229[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc229( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc230( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi229) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi230[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc230( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc231( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi230) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi231[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc231( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc232( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi231) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi232[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc232( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc233( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi232) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi233[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc233( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc234( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi233) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi234[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc234( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc235( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi234) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi235[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc235( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc236( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi235) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi236[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc236( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc237( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi236) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi237[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc237( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc238( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi237) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi238[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc238( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc239( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi238) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi239[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc239( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc240( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi239) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi240[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc240( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc241( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi240) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi241[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc241( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc242( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi241) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi242[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc242( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc243( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi242) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi243[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc243( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc244( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi243) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi244[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc244( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc245( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi244) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi245[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc245( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc246( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi245) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi246[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc246( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc247( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi246) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi247[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc247( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc248( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi247) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi248[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc248( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc249( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi248) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi249[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc249( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc250( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi249) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi250[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc250( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc251( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi250) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi251[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc251( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc252( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi251) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi252[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc252( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc253( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi252) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi253[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc253( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc254( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi253) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi254[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc254( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc255( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi254) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi255[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc255( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc256( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi255) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi256[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc256( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc257( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi256) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi257[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc257( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc258( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi257) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi258[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc258( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc259( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi258) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi259[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc259( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc260( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi259) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi260[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc260( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc261( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi260) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi261[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc261( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc262( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi261) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi262[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc262( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc263( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi262) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi263[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc263( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc264( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi263) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi264[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc264( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc265( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi264) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi265[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc265( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc266( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi265) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi266[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc266( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc267( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi266) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi267[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc267( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc268( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi267) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi268[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc268( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc269( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi268) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi269[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc269( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc270( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi269) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi270[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc270( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc271( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi270) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi271[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc271( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc272( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi271) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi272[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc272( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc273( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi272) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi273[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc273( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc274( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi273) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi274[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc274( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc275( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi274) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi275[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc275( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc276( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi275) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi276[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc276( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc277( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi276) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi277[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc277( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc278( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi277) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi278[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc278( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc279( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi278) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi279[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc279( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc280( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi279) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi280[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc280( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc281( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi280) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi281[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc281( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc282( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi281) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi282[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc282( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc283( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi282) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi283[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc283( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc284( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi283) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi284[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc284( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc285( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi284) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi285[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc285( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc286( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi285) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi286[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc286( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc287( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi286) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi287[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc287( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc288( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi287) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi288[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc288( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc289( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi288) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi289[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc289( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc290( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi289) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi290[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc290( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc291( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi290) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi291[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc291( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc292( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi291) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi292[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc292( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc293( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi292) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi293[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc293( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc294( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi293) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi294[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc294( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc295( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi294) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi295[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc295( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc296( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi295) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi296[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc296( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc297( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi296) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi297[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc297( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc298( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi297) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi298[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc298( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc299( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi298) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi299[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc299( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc300( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi299) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi300[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc300( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc301( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi300) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi301[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc301( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc302( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi301) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi302[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc302( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc303( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi302) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi303[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc303( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc304( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi303) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi304[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc304( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc305( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi304) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi305[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc305( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc306( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi305) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi306[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc306( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc307( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi306) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi307[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc307( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc308( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi307) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi308[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc308( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc309( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi308) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi309[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc309( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc310( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi309) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi310[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc310( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc311( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi310) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi311[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc311( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc312( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi311) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi312[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc312( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc313( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi312) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi313[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc313( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc314( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi313) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi314[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc314( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc315( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi314) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi315[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc315( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc316( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi315) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi316[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc316( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc317( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi316) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi317[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc317( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc318( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi317) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi318[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc318( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc319( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi318) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi319[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc319( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc320( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi319) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi320[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc320( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc321( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi320) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi321[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc321( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc322( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi321) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi322[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc322( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc323( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi322) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi323[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc323( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc324( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi323) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi324[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc324( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc325( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi324) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi325[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc325( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc326( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi325) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi326[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc326( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc327( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi326) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi327[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc327( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc328( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi327) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi328[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc328( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc329( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi328) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi329[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc329( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc330( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi329) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi330[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc330( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc331( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi330) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi331[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc331( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc332( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi331) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi332[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc332( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc333( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi332) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi333[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc333( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc334( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi333) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi334[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc334( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc335( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi334) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi335[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc335( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc336( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi335) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi336[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc336( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc337( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi336) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi337[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc337( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc338( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi337) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi338[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc338( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc339( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi338) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi339[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc339( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc340( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi339) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi340[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc340( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc341( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi340) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi341[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc341( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc342( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi341) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi342[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc342( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc343( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi342) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi343[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc343( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc344( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi343) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi344[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc344( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc345( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi344) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi345[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc345( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc346( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi345) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi346[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc346( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc347( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi346) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi347[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc347( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc348( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi347) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi348[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc348( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc349( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi348) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi349[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc349( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc350( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi349) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi350[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc350( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc351( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi350) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi351[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc351( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc352( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi351) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi352[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc352( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc353( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi352) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi353[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc353( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc354( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi353) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi354[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc354( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc355( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi354) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi355[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc355( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc356( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi355) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi356[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc356( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc357( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi356) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi357[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc357( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc358( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi357) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi358[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc358( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc359( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi358) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi359[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc359( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc360( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi359) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi360[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc360( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc361( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi360) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi361[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc361( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc362( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi361) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi362[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc362( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc363( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi362) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi363[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc363( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc364( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi363) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi364[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc364( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc365( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi364) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi365[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc365( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc366( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi365) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi366[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc366( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc367( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi366) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi367[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc367( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc368( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi367) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi368[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc368( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc369( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi368) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi369[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc369( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc370( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi369) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi370[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc370( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc371( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi370) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi371[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc371( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc372( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi371) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi372[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc372( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc373( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi372) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi373[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc373( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc374( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi373) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi374[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc374( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc375( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi374) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi375[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc375( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc376( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi375) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi376[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc376( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc377( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi376) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi377[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc377( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc378( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi377) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi378[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc378( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc379( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi378) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi379[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc379( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc380( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi379) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi380[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc380( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc381( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi380) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi381[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc381( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc382( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi381) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi382[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc382( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc383( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi382) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi383[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc383( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc384( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi383) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi384[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc384( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc385( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi384) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi385[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc385( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc386( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi385) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi386[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc386( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc387( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi386) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi387[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc387( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc388( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi387) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi388[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc388( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc389( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi388) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi389[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc389( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc390( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi389) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi390[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc390( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc391( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi390) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi391[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc391( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc392( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi391) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi392[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc392( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc393( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi392) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi393[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc393( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc394( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi393) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi394[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc394( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc395( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi394) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi395[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc395( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc396( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi395) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi396[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc396( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc397( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi396) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi397[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc397( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc398( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi397) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi398[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc398( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc399( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi398) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi399[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc399( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc400( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi399) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi400[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc400( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc401( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi400) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi401[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc401( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc402( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi401) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi402[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc402( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc403( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi402) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi403[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc403( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc404( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi403) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi404[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc404( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc405( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi404) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi405[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc405( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc406( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi405) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi406[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc406( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc407( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi406) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi407[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc407( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc408( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi407) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi408[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc408( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc409( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi408) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi409[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc409( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc410( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi409) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi410[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc410( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc411( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi410) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi411[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc411( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc412( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi411) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi412[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc412( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc413( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi412) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi413[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc413( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc414( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi413) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi414[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc414( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc415( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi414) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi415[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc415( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc416( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi415) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi416[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc416( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc417( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi416) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi417[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc417( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc418( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi417) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi418[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc418( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc419( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi418) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi419[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc419( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc420( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi419) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi420[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc420( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc421( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi420) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi421[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc421( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc422( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi421) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi422[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc422( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc423( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi422) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi423[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc423( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc424( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi423) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi424[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc424( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc425( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi424) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi425[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc425( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc426( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi425) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi426[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc426( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc427( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi426) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi427[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc427( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc428( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi427) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi428[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc428( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc429( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi428) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi429[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc429( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc430( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi429) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi430[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc430( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc431( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi430) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi431[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc431( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc432( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi431) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi432[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc432( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc433( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi432) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi433[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc433( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc434( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi433) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi434[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc434( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc435( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi434) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi435[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc435( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc436( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi435) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi436[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc436( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc437( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi436) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi437[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc437( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc438( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi437) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi438[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc438( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc439( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi438) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi439[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc439( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc440( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi439) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi440[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc440( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc441( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi440) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi441[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc441( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc442( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi441) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi442[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc442( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc443( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi442) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi443[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc443( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc444( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi443) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi444[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc444( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc445( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi444) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi445[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc445( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc446( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi445) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi446[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc446( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc447( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi446) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi447[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc447( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc448( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi447) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi448[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc448( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc449( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi448) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi449[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc449( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc450( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi449) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi450[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc450( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc451( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi450) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi451[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc451( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc452( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi451) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi452[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc452( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc453( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi452) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi453[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc453( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc454( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi453) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi454[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc454( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc455( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi454) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi455[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc455( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc456( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi455) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi456[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc456( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc457( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi456) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi457[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc457( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc458( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi457) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi458[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc458( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc459( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi458) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi459[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc459( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc460( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi459) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi460[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc460( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc461( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi460) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi461[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc461( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc462( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi461) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi462[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc462( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc463( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi462) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi463[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc463( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc464( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi463) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi464[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc464( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc465( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi464) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi465[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc465( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc466( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi465) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi466[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc466( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc467( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi466) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi467[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc467( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc468( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi467) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi468[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc468( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc469( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi468) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi469[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc469( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc470( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi469) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi470[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc470( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc471( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi470) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi471[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc471( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc472( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi471) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi472[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc472( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc473( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi472) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi473[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc473( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc474( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi473) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi474[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc474( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc475( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi474) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi475[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc475( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc476( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi475) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi476[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc476( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc477( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi476) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi477[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc477( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc478( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi477) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi478[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc478( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc479( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi478) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi479[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc479( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc480( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi479) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi480[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc480( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc481( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi480) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi481[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc481( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc482( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi481) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi482[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc482( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc483( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi482) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi483[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc483( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc484( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi483) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi484[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc484( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc485( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi484) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi485[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc485( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc486( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi485) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi486[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc486( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc487( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi486) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi487[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc487( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc488( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi487) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi488[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc488( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc489( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi488) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi489[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc489( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc490( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi489) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi490[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc490( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc491( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi490) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi491[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc491( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc492( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi491) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi492[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc492( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc493( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi492) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi493[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc493( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc494( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi493) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi494[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc494( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc495( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi494) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi495[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc495( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc496( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi495) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi496[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc496( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc497( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi496) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi497[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc497( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc498( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi497) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi498[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc498( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc499( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi498) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi499[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc499( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc500( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi499) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi500[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc500( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc501( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi500) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi501[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc501( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc502( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi501) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi502[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc502( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc503( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi502) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi503[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc503( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc504( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi503) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi504[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc504( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc505( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi504) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi505[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc505( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc506( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi505) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi506[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc506( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc507( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi506) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi507[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc507( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc508( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi507) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi508[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc508( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc509( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi508) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi509[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc509( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc510( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi509) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi510[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc510( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc511( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi510) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi511[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc511( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc512( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi511) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi512[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc512( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc513( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi512) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi513[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc513( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc514( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi513) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi514[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc514( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc515( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi514) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi515[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc515( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc516( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi515) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi516[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc516( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc517( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi516) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi517[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc517( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc518( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi517) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi518[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc518( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc519( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi518) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi519[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc519( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc520( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi519) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi520[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc520( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc521( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi520) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi521[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc521( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc522( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi521) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi522[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc522( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc523( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi522) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi523[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc523( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc524( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi523) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi524[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc524( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc525( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi524) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi525[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc525( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc526( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi525) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi526[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc526( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc527( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi526) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi527[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc527( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc528( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi527) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi528[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc528( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc529( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi528) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi529[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc529( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc530( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi529) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi530[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc530( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc531( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi530) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi531[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc531( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc532( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi531) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi532[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc532( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc533( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi532) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi533[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc533( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc534( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi533) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi534[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc534( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc535( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi534) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi535[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc535( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc536( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi535) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi536[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc536( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc537( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi536) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi537[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc537( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc538( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi537) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi538[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc538( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc539( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi538) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi539[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc539( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc540( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi539) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi540[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc540( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc541( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi540) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi541[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc541( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc542( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi541) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi542[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc542( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc543( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi542) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi543[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc543( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc544( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi543) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi544[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc544( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc545( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi544) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi545[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc545( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc546( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi545) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi546[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc546( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc547( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi546) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi547[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc547( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc548( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi547) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi548[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc548( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc549( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi548) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi549[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc549( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc550( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi549) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi550[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc550( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc551( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi550) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi551[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc551( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc552( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi551) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi552[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc552( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc553( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi552) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi553[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc553( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc554( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi553) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi554[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc554( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc555( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi554) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi555[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc555( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc556( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi555) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi556[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc556( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc557( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi556) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi557[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc557( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc558( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi557) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi558[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc558( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc559( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi558) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi559[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc559( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc560( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi559) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi560[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc560( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc561( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi560) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi561[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc561( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc562( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi561) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi562[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc562( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc563( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi562) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi563[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc563( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc564( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi563) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi564[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc564( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc565( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi564) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi565[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc565( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc566( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi565) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi566[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc566( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc567( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi566) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi567[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc567( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc568( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi567) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi568[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc568( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc569( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi568) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi569[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc569( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc570( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi569) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi570[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc570( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc571( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi570) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi571[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc571( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc572( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi571) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi572[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc572( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc573( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi572) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi573[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc573( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc574( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi573) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi574[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc574( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc575( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi574) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi575[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc575( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc576( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi575) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi576[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc576( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc577( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi576) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi577[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc577( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc578( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi577) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi578[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc578( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc579( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi578) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi579[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc579( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc580( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi579) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi580[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc580( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc581( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi580) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi581[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc581( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc582( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi581) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi582[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc582( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc583( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi582) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi583[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc583( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc584( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi583) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi584[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc584( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc585( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi584) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi585[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc585( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc586( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi585) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi586[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc586( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc587( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi586) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi587[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc587( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc588( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi587) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi588[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc588( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc589( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi588) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi589[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc589( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc590( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi589) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi590[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc590( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc591( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi590) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi591[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc591( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc592( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi591) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi592[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc592( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc593( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi592) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi593[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc593( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc594( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi593) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi594[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc594( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc595( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi594) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi595[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc595( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc596( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi595) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi596[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc596( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc597( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi596) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi597[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc597( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc598( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi597) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi598[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc598( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc599( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi598) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi599[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc599( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc600( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi599) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi600[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc600( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc601( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi600) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi601[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc601( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc602( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi601) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi602[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc602( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc603( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi602) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi603[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc603( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc604( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi603) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi604[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc604( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc605( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi604) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi605[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc605( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc606( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi605) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi606[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc606( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc607( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi606) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi607[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc607( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc608( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi607) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi608[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc608( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc609( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi608) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi609[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc609( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc610( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi609) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi610[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc610( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc611( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi610) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi611[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc611( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc612( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi611) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi612[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc612( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc613( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi612) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi613[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc613( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc614( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi613) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi614[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc614( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc615( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi614) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi615[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc615( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc616( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi615) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi616[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc616( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc617( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi616) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi617[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc617( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc618( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi617) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi618[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc618( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc619( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi618) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi619[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc619( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc620( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi619) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi620[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc620( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc621( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi620) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi621[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc621( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc622( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi621) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi622[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc622( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc623( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi622) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi623[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc623( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc624( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi623) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi624[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc624( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc625( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi624) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi625[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc625( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc626( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi625) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi626[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc626( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc627( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi626) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi627[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc627( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc628( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi627) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi628[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc628( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc629( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi628) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi629[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc629( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc630( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi629) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi630[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc630( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc631( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi630) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi631[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc631( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc632( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi631) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi632[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc632( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc633( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi632) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi633[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc633( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc634( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi633) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi634[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc634( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc635( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi634) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi635[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc635( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc636( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi635) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi636[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc636( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc637( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi636) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi637[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc637( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc638( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi637) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi638[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc638( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc639( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi638) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi639[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc639( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc640( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi639) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi640[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc640( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc641( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi640) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi641[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc641( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc642( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi641) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi642[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc642( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc643( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi642) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi643[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc643( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc644( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi643) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi644[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc644( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc645( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi644) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi645[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc645( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc646( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi645) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi646[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc646( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc647( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi646) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi647[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc647( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc648( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi647) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi648[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc648( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc649( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi648) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi649[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc649( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc650( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi649) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi650[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc650( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc651( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi650) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi651[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc651( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc652( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi651) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi652[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc652( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc653( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi652) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi653[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc653( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc654( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi653) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi654[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc654( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc655( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi654) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi655[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc655( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc656( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi655) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi656[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc656( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc657( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi656) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi657[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc657( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc658( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi657) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi658[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc658( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc659( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi658) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi659[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc659( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc660( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi659) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi660[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc660( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc661( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi660) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi661[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc661( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc662( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi661) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi662[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc662( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc663( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi662) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi663[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc663( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc664( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi663) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi664[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc664( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc665( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi664) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi665[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc665( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc666( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi665) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi666[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc666( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc667( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi666) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi667[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc667( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc668( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi667) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi668[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc668( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc669( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi668) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi669[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc669( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc670( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi669) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi670[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc670( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc671( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi670) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi671[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc671( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc672( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi671) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi672[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc672( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc673( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi672) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi673[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc673( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc674( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi673) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi674[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc674( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc675( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi674) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi675[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc675( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc676( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi675) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi676[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc676( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc677( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi676) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi677[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc677( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc678( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi677) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi678[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc678( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc679( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi678) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi679[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc679( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc680( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi679) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi680[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc680( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc681( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi680) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi681[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc681( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc682( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi681) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi682[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc682( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc683( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi682) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi683[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc683( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc684( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi683) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi684[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc684( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc685( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi684) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi685[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc685( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc686( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi685) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi686[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc686( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc687( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi686) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi687[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc687( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc688( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi687) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi688[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc688( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc689( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi688) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi689[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc689( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc690( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi689) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi690[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc690( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc691( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi690) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi691[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc691( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc692( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi691) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi692[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc692( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc693( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi692) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi693[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc693( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc694( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi693) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi694[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc694( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc695( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi694) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi695[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc695( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc696( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi695) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi696[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc696( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc697( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi696) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi697[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc697( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc698( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi697) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi698[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc698( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc699( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi698) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi699[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc699( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc700( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi699) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi700[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc700( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc701( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi700) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi701[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc701( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc702( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi701) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi702[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc702( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc703( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi702) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi703[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc703( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc704( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi703) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi704[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc704( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc705( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi704) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi705[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc705( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc706( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi705) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi706[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc706( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc707( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi706) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi707[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc707( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc708( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi707) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi708[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc708( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc709( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi708) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi709[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc709( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc710( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi709) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi710[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc710( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc711( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi710) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi711[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc711( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc712( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi711) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi712[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc712( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc713( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi712) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi713[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc713( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc714( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi713) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi714[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc714( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc715( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi714) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi715[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc715( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc716( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi715) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi716[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc716( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc717( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi716) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi717[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc717( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc718( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi717) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi718[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc718( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc719( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi718) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi719[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc719( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc720( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi719) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi720[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc720( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc721( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi720) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi721[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc721( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc722( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi721) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi722[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc722( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc723( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi722) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi723[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc723( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc724( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi723) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi724[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc724( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc725( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi724) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi725[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc725( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc726( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi725) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi726[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc726( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc727( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi726) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi727[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc727( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc728( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi727) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi728[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc728( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc729( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi728) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi729[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc729( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc730( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi729) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi730[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc730( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc731( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi730) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi731[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc731( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc732( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi731) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi732[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc732( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc733( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi732) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi733[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc733( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc734( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi733) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi734[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc734( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc735( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi734) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi735[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc735( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc736( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi735) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi736[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc736( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc737( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi736) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi737[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc737( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc738( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi737) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi738[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc738( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc739( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi738) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi739[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc739( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc740( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi739) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi740[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc740( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc741( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi740) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi741[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc741( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc742( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi741) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi742[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc742( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc743( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi742) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi743[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc743( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc744( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi743) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi744[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc744( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc745( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi744) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi745[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc745( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc746( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi745) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi746[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc746( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc747( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi746) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi747[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc747( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc748( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi747) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi748[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc748( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc749( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi748) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi749[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc749( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc750( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi749) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi750[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc750( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc751( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi750) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi751[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc751( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc752( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi751) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi752[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc752( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc753( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi752) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi753[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc753( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc754( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi753) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi754[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc754( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc755( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi754) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi755[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc755( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc756( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi755) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi756[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc756( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc757( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi756) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi757[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc757( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc758( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi757) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi758[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc758( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc759( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi758) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi759[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc759( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc760( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi759) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi760[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc760( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc761( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi760) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi761[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc761( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc762( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi761) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi762[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc762( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc763( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi762) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi763[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc763( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc764( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi763) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi764[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc764( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc765( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi764) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi765[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc765( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc766( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi765) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi766[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc766( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc767( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi766) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi767[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc767( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc768( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi767) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi768[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc768( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc769( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi768) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi769[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc769( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc770( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi769) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi770[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc770( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc771( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi770) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi771[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc771( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc772( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi771) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi772[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc772( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc773( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi772) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi773[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc773( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc774( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi773) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi774[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc774( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc775( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi774) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi775[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc775( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc776( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi775) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi776[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc776( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc777( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi776) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi777[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc777( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc778( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi777) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi778[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc778( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc779( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi778) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi779[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc779( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc780( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi779) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi780[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc780( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc781( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi780) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi781[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc781( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc782( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi781) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi782[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc782( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc783( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi782) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi783[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc783( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc784( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi783) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi784[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc784( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc785( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi784) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi785[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc785( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc786( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi785) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi786[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc786( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc787( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi786) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi787[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc787( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc788( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi787) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi788[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc788( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc789( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi788) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi789[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc789( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc790( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi789) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi790[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc790( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc791( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi790) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi791[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc791( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc792( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi791) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi792[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc792( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc793( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi792) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi793[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc793( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc794( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi793) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi794[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc794( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc795( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi794) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi795[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc795( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc796( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi795) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi796[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc796( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc797( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi796) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi797[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc797( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc798( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi797) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi798[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc798( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc799( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi798) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi799[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc799( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc800( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi799) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi800[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc800( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc801( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi800) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi801[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc801( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc802( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi801) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi802[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc802( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc803( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi802) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi803[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc803( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc804( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi803) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi804[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc804( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc805( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi804) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi805[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc805( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc806( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi805) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi806[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc806( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc807( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi806) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi807[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc807( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc808( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi807) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi808[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc808( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc809( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi808) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi809[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc809( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc810( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi809) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi810[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc810( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc811( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi810) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi811[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc811( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc812( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi811) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi812[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc812( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc813( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi812) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi813[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc813( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc814( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi813) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi814[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc814( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc815( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi814) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi815[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc815( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc816( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi815) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi816[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc816( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc817( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi816) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi817[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc817( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc818( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi817) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi818[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc818( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc819( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi818) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi819[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc819( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc820( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi819) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi820[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc820( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc821( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi820) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi821[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc821( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc822( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi821) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi822[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc822( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc823( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi822) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi823[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc823( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc824( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi823) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi824[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc824( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc825( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi824) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi825[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc825( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc826( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi825) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi826[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc826( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc827( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi826) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi827[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc827( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc828( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi827) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi828[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc828( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc829( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi828) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi829[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc829( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc830( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi829) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi830[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc830( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc831( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi830) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi831[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc831( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc832( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi831) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi832[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc832( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc833( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi832) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi833[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc833( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc834( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi833) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi834[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc834( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc835( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi834) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi835[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc835( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc836( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi835) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi836[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc836( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc837( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi836) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi837[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc837( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc838( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi837) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi838[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc838( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc839( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi838) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi839[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc839( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc840( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi839) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi840[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc840( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc841( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi840) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi841[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc841( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc842( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi841) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi842[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc842( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc843( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi842) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi843[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc843( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc844( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi843) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi844[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc844( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc845( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi844) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi845[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc845( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc846( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi845) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi846[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc846( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc847( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi846) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi847[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc847( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc848( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi847) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi848[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc848( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc849( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi848) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi849[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc849( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc850( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi849) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi850[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc850( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc851( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi850) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi851[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc851( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc852( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi851) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi852[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc852( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc853( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi852) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi853[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc853( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc854( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi853) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi854[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc854( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc855( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi854) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi855[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc855( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc856( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi855) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi856[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc856( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc857( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi856) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi857[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc857( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc858( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi857) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi858[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc858( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc859( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi858) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi859[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc859( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc860( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi859) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi860[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc860( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc861( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi860) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi861[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc861( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc862( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi861) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi862[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc862( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc863( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi862) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi863[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc863( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc864( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi863) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi864[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc864( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc865( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi864) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi865[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc865( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc866( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi865) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi866[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc866( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc867( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi866) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi867[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc867( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc868( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi867) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi868[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc868( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc869( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi868) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi869[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc869( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc870( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi869) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi870[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc870( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc871( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi870) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi871[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc871( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc872( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi871) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi872[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc872( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc873( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi872) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi873[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc873( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc874( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi873) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi874[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc874( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc875( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi874) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi875[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc875( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc876( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi875) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi876[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc876( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc877( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi876) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi877[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc877( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc878( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi877) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi878[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc878( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc879( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi878) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi879[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc879( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc880( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi879) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi880[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc880( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc881( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi880) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi881[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc881( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc882( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi881) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi882[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc882( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc883( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi882) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi883[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc883( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc884( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi883) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi884[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc884( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc885( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi884) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi885[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc885( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc886( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi885) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi886[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc886( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc887( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi886) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi887[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc887( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc888( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi887) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi888[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc888( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc889( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi888) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi889[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc889( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc890( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi889) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi890[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc890( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc891( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi890) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi891[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc891( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc892( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi891) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi892[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc892( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc893( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi892) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi893[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc893( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc894( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi893) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi894[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc894( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc895( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi894) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi895[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc895( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc896( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi895) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi896[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc896( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc897( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi896) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi897[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc897( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc898( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi897) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi898[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc898( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc899( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi898) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi899[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc899( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc900( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi899) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi900[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc900( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc901( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi900) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi901[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc901( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc902( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi901) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi902[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc902( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc903( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi902) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi903[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc903( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc904( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi903) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi904[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc904( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc905( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi904) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi905[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc905( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc906( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi905) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi906[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc906( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc907( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi906) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi907[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc907( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc908( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi907) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi908[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc908( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc909( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi908) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi909[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc909( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc910( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi909) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi910[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc910( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc911( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi910) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi911[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc911( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc912( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi911) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi912[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc912( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc913( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi912) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi913[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc913( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc914( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi913) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi914[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc914( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc915( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi914) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi915[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc915( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc916( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi915) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi916[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc916( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc917( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi916) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi917[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc917( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc918( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi917) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi918[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc918( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc919( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi918) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi919[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc919( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc920( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi919) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi920[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc920( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc921( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi920) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi921[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc921( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc922( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi921) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi922[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc922( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc923( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi922) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi923[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc923( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc924( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi923) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi924[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc924( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc925( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi924) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi925[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc925( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc926( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi925) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi926[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc926( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc927( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi926) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi927[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc927( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc928( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi927) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi928[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc928( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc929( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi928) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi929[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc929( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc930( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi929) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi930[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc930( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc931( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi930) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi931[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc931( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc932( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi931) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi932[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc932( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc933( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi932) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi933[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc933( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc934( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi933) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi934[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc934( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc935( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi934) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi935[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc935( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc936( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi935) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi936[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc936( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc937( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi936) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi937[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc937( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc938( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi937) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi938[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc938( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc939( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi938) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi939[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc939( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc940( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi939) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi940[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc940( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc941( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi940) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi941[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc941( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc942( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi941) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi942[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc942( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc943( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi942) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi943[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc943( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc944( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi943) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi944[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc944( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc945( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi944) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi945[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc945( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc946( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi945) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi946[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc946( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc947( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi946) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi947[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc947( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc948( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi947) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi948[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc948( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc949( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi948) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi949[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc949( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc950( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi949) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi950[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc950( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc951( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi950) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi951[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc951( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc952( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi951) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi952[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc952( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc953( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi952) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi953[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc953( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc954( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi953) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi954[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc954( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc955( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi954) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi955[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc955( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc956( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi955) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi956[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc956( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc957( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi956) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi957[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc957( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc958( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi957) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi958[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc958( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc959( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi958) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi959[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc959( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc960( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi959) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi960[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc960( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc961( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi960) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi961[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc961( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc962( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi961) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi962[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc962( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc963( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi962) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi963[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc963( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc964( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi963) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi964[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc964( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc965( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi964) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi965[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc965( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc966( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi965) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi966[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc966( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc967( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi966) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi967[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc967( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc968( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi967) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi968[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc968( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc969( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi968) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi969[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc969( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc970( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi969) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi970[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc970( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc971( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi970) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi971[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc971( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc972( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi971) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi972[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc972( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc973( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi972) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi973[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc973( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc974( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi973) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi974[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc974( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc975( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi974) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi975[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc975( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc976( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi975) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi976[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc976( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc977( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi976) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi977[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc977( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc978( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi977) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi978[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc978( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc979( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi978) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi979[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc979( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc980( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi979) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi980[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc980( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc981( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi980) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi981[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc981( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc982( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi981) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi982[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc982( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc983( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi982) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi983[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc983( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc984( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi983) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi984[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc984( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc985( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi984) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi985[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc985( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc986( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi985) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi986[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc986( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc987( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi986) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi987[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc987( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc988( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi987) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi988[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc988( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc989( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi988) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi989[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc989( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc990( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi989) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi990[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc990( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc991( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi990) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi991[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc991( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc992( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi991) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi992[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc992( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc993( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi992) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi993[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc993( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc994( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi993) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi994[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc994( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc995( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi994) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi995[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc995( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc996( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi995) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi996[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc996( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc997( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi996) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi997[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc997( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc998( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi997) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi998[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc998( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc999( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi998) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi999[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc999( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1000( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi999) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1000[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1000( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1001( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1000) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1001[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1001( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1002( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1001) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1002[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1002( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1003( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1002) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1003[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1003( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1004( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1003) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1004[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1004( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1005( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1004) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1005[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1005( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1006( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1005) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1006[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1006( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1007( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1006) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1007[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1007( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1008( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1007) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1008[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1008( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1009( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1008) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1009[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1009( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1010( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1009) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1010[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1010( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1011( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1010) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1011[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1011( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1012( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1011) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1012[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1012( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1013( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1012) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1013[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1013( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1014( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1013) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1014[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1014( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1015( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1014) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1015[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1015( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1016( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1015) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1016[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1016( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1017( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1016) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1017[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1017( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1018( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1017) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1018[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1018( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1019( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1018) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1019[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1019( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1020( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1019) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1020[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1020( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1021( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1020) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1021[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1021( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1022( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1021) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1022[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1022( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1023( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1022) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1023[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1023( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1024( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1023) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1024[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1024( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1025( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1024) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1025[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1025( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1026( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1025) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1026[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1026( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1027( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1026) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1027[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1027( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1028( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1027) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1028[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1028( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1029( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1028) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1029[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1029( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1030( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1029) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1030[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1030( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1031( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1030) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1031[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1031( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1032( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1031) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1032[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1032( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1033( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1032) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1033[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1033( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1034( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1033) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1034[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1034( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1035( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1034) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1035[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1035( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1036( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1035) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1036[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1036( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1037( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1036) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1037[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1037( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1038( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1037) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1038[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1038( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1039( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1038) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1039[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1039( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1040( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1039) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1040[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1040( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1041( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1040) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1041[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1041( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1042( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1041) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1042[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1042( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1043( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1042) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1043[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1043( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1044( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1043) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1044[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1044( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1045( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1044) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1045[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1045( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1046( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1045) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1046[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1046( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1047( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1046) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1047[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1047( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1048( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1047) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1048[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1048( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1049( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1048) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1049[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1049( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1050( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1049) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1050[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1050( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1051( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1050) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1051[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1051( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1052( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1051) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1052[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1052( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1053( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1052) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1053[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1053( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1054( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1053) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1054[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1054( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1055( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1054) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1055[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1055( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1056( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1055) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1056[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1056( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1057( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1056) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1057[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1057( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1058( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1057) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1058[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1058( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1059( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1058) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1059[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1059( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1060( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1059) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1060[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1060( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1061( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1060) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1061[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1061( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1062( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1061) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1062[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1062( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1063( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1062) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1063[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1063( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1064( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1063) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1064[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1064( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1065( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1064) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1065[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1065( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1066( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1065) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1066[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1066( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1067( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1066) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1067[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1067( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1068( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1067) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1068[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1068( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1069( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1068) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1069[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1069( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1070( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1069) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1070[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1070( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1071( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1070) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1071[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1071( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1072( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1071) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1072[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1072( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1073( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1072) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1073[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1073( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1074( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1073) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1074[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1074( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1075( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1074) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1075[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1075( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1076( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1075) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1076[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1076( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1077( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1076) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1077[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1077( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1078( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1077) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1078[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1078( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1079( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1078) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1079[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1079( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1080( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1079) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1080[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1080( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1081( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1080) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1081[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1081( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1082( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1081) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1082[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1082( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1083( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1082) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1083[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1083( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1084( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1083) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1084[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1084( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1085( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1084) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1085[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1085( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1086( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1085) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1086[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1086( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1087( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1086) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1087[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1087( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1088( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1087) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1088[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1088( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1089( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1088) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1089[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1089( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1090( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1089) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1090[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1090( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1091( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1090) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1091[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1091( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1092( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1091) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1092[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1092( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1093( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1092) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1093[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1093( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1094( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1093) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1094[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1094( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1095( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1094) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1095[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1095( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1096( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1095) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1096[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1096( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1097( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1096) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1097[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1097( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1098( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1097) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1098[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1098( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1099( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1098) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1099[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1099( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1100( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1099) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1100[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1100( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1101( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1100) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1101[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1101( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1102( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1101) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1102[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1102( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1103( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1102) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1103[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1103( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1104( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1103) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1104[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1104( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1105( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1104) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1105[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1105( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1106( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1105) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1106[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1106( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1107( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1106) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1107[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1107( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1108( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1107) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1108[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1108( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1109( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1108) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1109[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1109( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1110( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1109) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1110[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1110( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1111( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1110) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1111[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1111( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1112( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1111) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1112[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1112( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1113( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1112) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1113[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1113( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1114( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1113) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1114[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1114( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1115( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1114) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1115[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1115( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1116( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1115) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1116[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1116( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1117( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1116) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1117[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1117( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1118( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1117) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1118[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1118( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1119( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1118) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1119[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1119( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1120( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1119) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1120[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1120( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1121( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1120) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1121[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1121( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1122( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1121) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1122[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1122( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1123( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1122) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1123[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1123( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1124( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1123) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1124[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1124( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1125( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1124) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1125[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1125( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1126( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1125) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1126[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1126( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1127( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1126) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1127[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1127( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1128( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1127) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1128[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1128( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1129( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1128) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1129[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1129( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1130( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1129) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1130[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1130( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1131( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1130) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1131[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1131( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1132( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1131) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1132[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1132( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1133( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1132) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1133[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1133( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1134( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1133) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1134[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1134( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1135( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1134) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1135[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1135( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1136( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1135) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1136[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1136( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1137( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1136) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1137[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1137( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1138( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1137) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1138[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1138( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1139( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1138) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1139[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1139( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1140( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1139) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1140[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1140( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1141( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1140) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1141[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1141( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1142( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1141) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1142[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1142( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1143( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1142) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1143[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1143( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1144( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1143) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1144[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1144( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1145( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1144) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1145[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1145( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1146( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1145) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1146[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1146( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1147( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1146) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1147[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1147( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1148( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1147) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1148[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1148( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1149( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1148) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1149[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1149( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1150( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1149) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1150[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1150( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1151( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1150) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1151[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1151( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1152( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1151) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1152[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1152( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1153( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1152) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1153[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1153( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1154( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1153) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1154[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1154( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1155( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1154) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1155[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1155( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1156( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1155) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1156[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1156( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1157( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1156) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1157[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1157( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1158( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1157) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1158[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1158( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1159( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1158) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1159[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1159( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1160( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1159) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1160[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1160( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1161( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1160) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1161[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1161( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1162( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1161) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1162[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1162( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1163( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1162) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1163[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1163( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1164( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1163) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1164[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1164( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1165( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1164) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1165[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1165( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1166( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1165) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1166[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1166( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1167( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1166) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1167[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1167( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1168( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1167) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1168[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1168( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1169( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1168) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1169[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1169( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1170( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1169) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1170[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1170( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1171( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1170) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1171[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1171( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1172( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1171) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1172[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1172( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1173( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1172) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1173[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1173( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1174( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1173) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1174[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1174( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1175( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1174) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1175[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1175( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1176( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1175) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1176[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1176( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1177( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1176) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1177[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1177( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1178( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1177) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1178[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1178( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1179( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1178) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1179[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1179( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1180( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1179) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1180[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1180( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1181( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1180) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1181[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1181( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1182( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1181) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1182[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1182( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1183( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1182) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1183[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1183( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1184( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1183) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1184[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1184( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1185( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1184) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1185[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1185( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1186( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1185) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1186[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1186( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1187( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1186) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1187[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1187( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1188( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1187) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1188[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1188( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1189( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1188) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1189[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1189( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1190( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1189) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1190[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1190( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1191( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1190) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1191[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1191( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1192( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1191) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1192[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1192( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1193( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1192) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1193[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1193( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1194( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1193) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1194[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1194( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1195( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1194) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1195[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1195( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1196( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1195) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1196[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1196( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1197( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1196) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1197[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1197( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1198( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1197) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1198[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1198( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1199( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1198) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1199[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1199( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1200( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1199) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1200[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1200( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1201( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1200) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1201[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1201( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1202( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1201) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1202[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1202( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1203( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1202) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1203[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1203( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1204( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1203) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1204[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1204( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1205( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1204) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1205[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1205( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1206( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1205) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1206[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1206( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1207( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1206) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1207[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1207( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1208( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1207) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1208[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1208( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1209( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1208) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1209[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1209( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1210( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1209) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1210[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1210( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1211( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1210) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1211[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1211( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1212( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1211) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1212[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1212( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1213( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1212) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1213[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1213( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1214( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1213) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1214[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1214( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1215( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1214) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1215[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1215( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1216( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1215) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1216[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1216( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1217( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1216) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1217[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1217( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1218( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1217) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1218[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1218( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1219( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1218) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1219[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1219( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1220( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1219) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1220[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1220( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1221( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1220) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1221[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1221( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1222( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1221) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1222[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1222( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1223( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1222) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1223[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1223( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1224( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1223) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1224[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1224( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1225( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1224) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1225[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1225( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1226( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1225) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1226[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1226( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1227( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1226) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1227[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1227( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1228( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1227) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1228[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1228( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1229( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1228) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1229[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1229( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1230( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1229) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1230[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1230( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1231( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1230) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1231[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1231( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1232( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1231) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1232[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1232( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1233( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1232) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1233[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1233( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1234( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1233) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1234[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1234( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1235( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1234) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1235[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1235( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1236( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1235) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1236[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1236( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1237( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1236) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1237[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1237( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1238( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1237) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1238[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1238( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1239( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1238) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1239[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1239( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1240( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1239) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1240[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1240( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1241( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1240) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1241[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1241( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1242( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1241) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1242[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1242( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1243( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1242) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1243[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1243( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1244( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1243) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1244[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1244( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1245( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1244) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1245[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1245( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1246( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1245) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1246[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1246( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1247( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1246) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1247[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1247( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1248( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1247) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1248[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1248( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1249( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1248) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1249[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1249( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1250( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1249) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1250[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1250( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1251( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1250) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1251[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1251( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1252( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1251) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1252[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1252( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1253( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1252) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1253[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1253( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1254( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1253) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1254[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1254( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1255( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1254) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1255[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1255( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1256( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1255) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1256[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1256( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1257( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1256) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1257[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1257( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1258( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1257) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1258[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1258( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1259( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1258) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1259[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1259( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1260( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1259) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1260[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1260( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1261( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1260) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1261[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1261( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1262( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1261) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1262[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1262( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1263( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1262) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1263[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1263( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1264( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1263) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1264[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1264( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1265( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1264) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1265[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1265( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1266( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1265) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1266[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1266( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1267( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1266) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1267[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1267( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1268( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1267) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1268[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1268( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1269( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1268) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1269[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1269( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1270( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1269) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1270[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1270( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1271( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1270) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1271[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1271( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1272( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1271) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1272[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1272( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1273( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1272) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1273[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1273( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1274( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1273) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1274[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1274( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1275( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1274) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1275[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1275( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1276( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1275) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1276[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1276( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1277( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1276) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1277[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1277( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1278( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1277) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1278[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1278( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1279( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1278) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1279[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1279( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1280( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1279) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1280[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1280( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1281( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1280) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1281[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1281( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1282( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1281) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1282[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1282( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1283( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1282) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1283[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1283( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1284( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1283) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1284[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1284( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1285( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1284) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1285[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1285( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1286( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1285) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1286[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1286( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1287( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1286) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1287[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1287( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1288( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1287) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1288[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1288( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1289( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1288) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1289[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1289( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1290( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1289) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1290[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1290( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1291( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1290) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1291[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1291( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1292( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1291) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1292[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1292( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1293( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1292) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1293[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1293( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1294( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1293) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1294[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1294( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1295( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1294) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1295[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1295( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1296( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1295) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1296[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1296( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1297( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1296) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1297[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1297( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1298( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1297) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1298[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1298( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1299( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1298) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1299[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1299( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1300( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1299) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1300[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1300( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1301( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1300) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1301[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1301( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1302( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1301) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1302[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1302( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1303( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1302) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1303[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1303( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1304( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1303) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1304[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1304( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1305( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1304) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1305[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1305( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1306( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1305) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1306[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1306( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1307( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1306) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1307[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1307( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1308( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1307) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1308[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1308( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1309( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1308) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1309[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1309( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1310( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1309) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1310[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1310( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1311( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1310) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1311[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1311( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1312( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1311) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1312[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1312( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1313( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1312) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1313[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1313( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1314( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1313) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1314[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1314( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1315( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1314) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1315[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1315( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1316( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1315) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1316[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1316( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1317( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1316) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1317[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1317( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1318( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1317) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1318[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1318( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1319( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1318) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1319[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1319( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1320( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1319) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1320[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1320( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1321( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1320) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1321[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1321( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1322( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1321) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1322[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1322( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1323( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1322) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1323[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1323( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1324( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1323) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1324[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1324( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1325( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1324) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1325[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1325( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1326( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1325) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1326[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1326( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1327( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1326) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1327[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1327( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1328( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1327) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1328[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1328( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1329( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1328) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1329[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1329( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1330( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1329) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1330[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1330( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1331( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1330) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1331[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1331( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1332( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1331) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1332[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1332( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1333( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1332) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1333[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1333( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1334( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1333) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1334[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1334( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1335( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1334) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1335[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1335( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1336( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1335) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1336[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1336( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1337( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1336) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1337[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1337( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1338( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1337) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1338[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1338( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1339( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1338) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1339[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1339( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1340( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1339) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1340[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1340( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1341( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1340) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1341[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1341( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1342( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1341) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1342[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1342( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1343( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1342) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1343[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1343( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1344( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1343) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1344[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1344( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1345( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1344) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1345[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1345( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1346( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1345) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1346[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1346( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1347( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1346) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1347[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1347( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1348( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1347) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1348[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1348( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1349( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1348) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1349[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1349( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1350( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1349) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1350[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1350( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1351( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1350) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1351[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1351( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1352( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1351) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1352[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1352( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1353( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1352) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1353[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1353( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1354( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1353) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1354[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1354( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1355( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1354) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1355[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1355( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1356( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1355) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1356[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1356( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1357( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1356) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1357[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1357( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1358( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1357) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1358[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1358( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1359( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1358) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1359[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1359( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1360( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1359) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1360[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1360( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1361( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1360) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1361[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1361( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1362( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1361) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1362[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1362( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1363( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1362) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1363[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1363( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1364( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1363) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1364[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1364( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1365( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1364) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1365[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1365( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1366( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1365) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1366[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1366( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1367( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1366) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1367[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1367( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1368( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1367) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1368[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1368( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1369( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1368) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1369[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1369( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1370( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1369) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1370[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1370( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1371( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1370) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1371[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1371( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1372( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1371) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1372[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1372( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1373( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1372) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1373[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1373( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1374( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1373) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1374[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1374( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1375( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1374) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1375[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1375( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1376( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1375) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1376[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1376( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1377( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1376) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1377[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1377( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1378( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1377) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1378[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1378( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1379( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1378) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1379[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1379( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1380( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1379) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1380[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1380( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1381( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1380) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1381[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1381( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1382( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1381) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1382[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1382( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1383( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1382) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1383[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1383( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1384( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1383) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1384[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1384( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1385( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1384) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1385[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1385( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1386( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1385) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1386[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1386( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1387( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1386) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1387[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1387( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1388( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1387) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1388[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1388( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1389( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1388) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1389[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1389( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1390( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1389) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1390[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1390( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1391( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1390) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1391[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1391( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1392( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1391) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1392[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1392( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1393( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1392) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1393[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1393( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1394( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1393) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1394[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1394( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1395( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1394) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1395[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1395( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1396( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1395) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1396[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1396( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1397( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1396) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1397[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1397( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1398( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1397) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1398[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1398( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1399( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1398) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1399[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1399( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1400( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1399) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1400[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1400( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1401( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1400) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1401[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1401( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1402( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1401) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1402[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1402( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1403( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1402) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1403[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1403( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1404( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1403) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1404[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1404( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1405( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1404) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1405[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1405( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1406( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1405) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1406[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1406( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1407( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1406) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1407[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1407( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1408( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1407) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1408[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1408( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1409( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1408) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1409[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1409( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1410( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1409) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1410[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1410( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1411( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1410) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1411[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1411( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1412( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1411) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1412[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1412( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1413( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1412) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1413[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1413( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1414( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1413) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1414[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1414( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1415( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1414) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1415[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1415( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1416( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1415) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1416[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1416( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1417( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1416) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1417[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1417( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1418( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1417) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1418[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1418( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1419( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1418) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1419[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1419( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1420( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1419) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1420[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1420( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1421( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1420) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1421[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1421( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1422( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1421) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1422[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1422( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1423( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1422) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1423[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1423( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1424( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1423) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1424[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1424( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1425( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1424) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1425[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1425( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1426( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1425) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1426[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1426( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1427( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1426) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1427[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1427( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1428( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1427) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1428[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1428( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1429( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1428) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1429[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1429( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1430( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1429) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1430[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1430( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1431( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1430) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1431[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1431( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1432( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1431) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1432[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1432( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1433( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1432) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1433[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1433( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1434( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1433) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1434[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1434( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1435( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1434) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1435[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1435( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1436( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1435) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1436[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1436( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1437( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1436) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1437[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1437( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1438( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1437) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1438[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1438( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1439( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1438) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1439[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1439( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1440( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1439) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1440[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1440( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1441( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1440) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1441[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1441( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1442( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1441) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1442[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1442( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1443( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1442) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1443[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1443( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1444( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1443) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1444[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1444( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1445( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1444) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1445[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1445( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1446( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1445) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1446[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1446( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1447( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1446) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1447[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1447( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1448( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1447) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1448[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1448( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1449( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1448) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1449[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1449( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1450( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1449) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1450[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1450( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1451( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1450) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1451[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1451( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1452( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1451) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1452[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1452( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1453( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1452) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1453[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1453( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1454( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1453) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1454[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1454( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1455( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1454) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1455[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1455( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1456( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1455) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1456[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1456( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1457( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1456) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1457[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1457( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1458( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1457) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1458[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1458( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1459( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1458) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1459[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1459( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1460( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1459) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1460[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1460( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1461( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1460) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1461[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1461( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1462( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1461) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1462[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1462( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1463( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1462) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1463[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1463( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1464( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1463) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1464[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1464( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1465( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1464) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1465[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1465( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1466( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1465) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1466[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1466( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1467( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1466) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1467[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1467( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1468( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1467) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1468[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1468( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1469( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1468) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1469[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1469( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1470( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1469) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1470[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1470( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1471( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1470) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1471[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1471( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1472( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1471) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1472[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1472( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1473( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1472) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1473[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1473( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1474( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1473) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1474[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1474( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1475( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1474) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1475[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1475( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1476( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1475) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1476[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1476( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1477( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1476) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1477[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1477( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1478( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1477) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1478[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1478( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1479( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1478) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1479[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1479( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1480( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1479) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1480[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1480( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1481( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1480) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1481[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1481( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1482( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1481) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1482[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1482( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1483( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1482) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1483[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1483( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1484( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1483) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1484[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1484( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1485( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1484) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1485[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1485( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1486( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1485) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1486[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1486( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1487( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1486) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1487[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1487( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1488( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1487) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1488[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1488( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1489( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1488) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1489[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1489( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1490( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1489) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1490[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1490( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1491( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1490) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1491[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1491( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1492( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1491) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1492[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1492( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1493( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1492) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1493[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1493( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1494( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1493) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1494[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1494( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1495( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1494) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1495[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1495( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1496( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1495) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1496[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1496( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1497( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1496) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1497[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1497( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1498( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1497) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1498[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1498( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1499( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1498) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1499[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1499( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1500( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1499) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1500[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1500( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1501( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1500) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1501[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1501( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1502( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1501) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1502[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1502( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1503( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1502) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1503[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1503( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1504( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1503) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1504[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1504( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1505( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1504) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1505[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1505( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1506( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1505) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1506[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1506( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1507( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1506) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1507[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1507( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1508( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1507) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1508[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1508( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1509( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1508) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1509[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1509( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1510( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1509) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1510[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1510( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1511( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1510) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1511[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1511( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1512( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1511) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1512[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1512( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1513( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1512) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1513[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1513( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1514( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1513) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1514[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1514( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1515( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1514) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1515[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1515( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1516( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1515) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1516[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1516( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1517( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1516) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1517[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1517( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1518( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1517) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1518[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1518( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1519( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1518) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1519[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1519( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1520( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1519) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1520[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1520( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1521( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1520) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1521[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1521( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1522( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1521) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1522[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1522( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1523( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1522) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1523[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1523( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1524( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1523) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1524[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1524( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1525( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1524) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1525[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1525( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1526( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1525) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1526[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1526( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1527( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1526) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1527[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1527( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1528( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1527) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1528[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1528( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1529( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1528) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1529[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1529( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1530( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1529) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1530[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1530( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1531( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1530) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1531[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1531( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1532( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1531) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1532[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1532( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1533( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1532) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1533[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1533( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1534( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1533) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1534[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1534( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1535( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1534) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1535[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1535( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1536( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1535) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1536[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1536( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1537( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1536) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1537[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1537( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1538( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1537) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1538[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1538( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1539( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1538) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1539[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1539( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1540( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1539) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1540[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1540( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1541( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1540) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1541[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1541( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1542( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1541) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1542[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1542( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1543( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1542) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1543[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1543( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1544( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1543) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1544[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1544( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1545( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1544) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1545[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1545( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1546( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1545) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1546[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1546( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1547( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1546) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1547[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1547( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1548( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1547) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1548[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1548( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1549( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1548) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1549[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1549( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1550( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1549) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1550[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1550( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1551( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1550) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1551[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1551( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1552( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1551) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1552[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1552( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1553( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1552) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1553[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1553( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1554( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1553) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1554[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1554( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1555( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1554) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1555[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1555( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1556( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1555) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1556[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1556( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1557( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1556) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1557[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1557( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1558( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1557) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1558[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1558( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1559( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1558) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1559[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1559( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1560( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1559) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1560[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1560( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1561( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1560) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1561[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1561( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1562( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1561) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1562[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1562( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1563( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1562) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1563[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1563( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1564( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1563) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1564[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1564( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1565( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1564) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1565[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1565( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1566( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1565) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1566[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1566( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1567( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1566) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1567[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1567( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1568( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1567) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1568[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1568( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1569( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1568) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1569[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1569( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1570( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1569) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1570[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1570( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1571( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1570) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1571[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1571( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1572( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1571) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1572[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1572( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1573( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1572) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1573[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1573( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1574( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1573) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1574[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1574( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1575( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1574) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1575[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1575( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1576( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1575) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1576[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1576( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1577( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1576) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1577[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1577( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1578( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1577) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1578[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1578( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1579( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1578) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1579[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1579( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1580( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1579) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1580[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1580( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1581( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1580) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1581[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1581( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1582( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1581) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1582[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1582( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1583( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1582) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1583[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1583( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1584( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1583) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1584[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1584( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1585( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1584) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1585[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1585( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1586( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1585) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1586[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1586( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1587( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1586) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1587[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1587( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1588( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1587) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1588[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1588( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1589( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1588) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1589[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1589( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1590( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1589) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1590[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1590( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1591( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1590) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1591[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1591( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1592( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1591) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1592[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1592( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1593( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1592) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1593[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1593( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1594( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1593) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1594[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1594( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1595( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1594) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1595[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1595( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1596( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1595) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1596[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1596( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1597( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1596) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1597[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1597( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1598( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1597) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1598[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1598( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1599( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1598) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1599[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1599( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1600( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1599) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1600[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1600( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1601( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1600) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1601[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1601( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1602( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1601) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1602[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1602( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1603( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1602) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1603[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1603( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1604( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1603) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1604[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1604( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1605( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1604) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1605[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1605( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1606( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1605) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1606[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1606( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1607( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1606) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1607[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1607( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1608( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1607) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1608[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1608( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1609( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1608) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1609[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1609( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1610( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1609) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1610[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1610( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1611( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1610) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1611[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1611( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1612( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1611) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1612[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1612( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1613( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1612) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1613[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1613( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1614( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1613) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1614[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1614( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1615( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1614) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1615[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1615( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1616( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1615) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1616[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1616( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1617( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1616) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1617[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1617( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1618( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1617) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1618[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1618( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1619( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1618) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1619[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1619( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1620( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1619) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1620[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1620( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1621( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1620) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1621[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1621( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1622( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1621) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1622[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1622( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1623( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1622) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1623[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1623( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1624( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1623) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1624[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1624( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1625( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1624) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1625[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1625( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1626( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1625) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1626[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1626( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1627( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1626) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1627[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1627( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1628( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1627) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1628[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1628( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1629( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1628) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1629[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1629( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1630( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1629) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1630[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1630( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1631( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1630) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1631[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1631( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1632( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1631) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1632[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1632( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1633( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1632) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1633[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1633( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1634( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1633) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1634[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1634( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1635( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1634) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1635[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1635( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1636( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1635) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1636[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1636( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1637( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1636) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1637[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1637( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1638( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1637) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1638[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1638( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1639( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1638) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1639[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1639( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1640( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1639) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1640[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1640( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1641( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1640) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1641[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1641( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1642( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1641) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1642[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1642( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1643( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1642) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1643[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1643( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1644( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1643) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1644[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1644( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1645( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1644) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1645[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1645( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1646( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1645) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1646[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1646( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1647( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1646) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1647[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1647( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1648( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1647) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1648[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1648( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1649( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1648) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1649[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1649( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1650( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1649) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1650[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1650( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1651( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1650) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1651[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1651( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1652( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1651) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1652[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1652( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1653( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1652) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1653[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1653( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1654( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1653) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1654[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1654( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1655( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1654) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1655[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1655( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1656( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1655) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1656[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1656( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1657( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1656) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1657[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1657( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1658( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1657) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1658[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1658( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1659( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1658) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1659[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1659( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1660( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1659) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1660[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1660( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1661( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1660) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1661[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1661( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1662( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1661) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1662[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1662( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1663( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1662) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1663[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1663( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1664( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1663) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1664[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1664( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1665( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1664) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1665[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1665( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1666( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1665) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1666[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1666( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1667( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1666) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1667[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1667( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1668( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1667) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1668[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1668( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1669( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1668) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1669[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1669( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1670( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1669) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1670[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1670( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1671( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1670) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1671[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1671( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1672( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1671) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1672[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1672( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1673( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1672) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1673[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1673( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1674( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1673) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1674[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1674( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1675( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1674) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1675[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1675( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1676( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1675) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1676[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1676( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1677( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1676) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1677[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1677( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1678( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1677) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1678[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1678( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1679( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1678) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1679[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1679( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1680( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1679) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1680[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1680( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1681( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1680) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1681[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1681( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1682( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1681) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1682[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1682( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1683( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1682) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1683[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1683( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1684( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1683) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1684[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1684( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1685( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1684) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1685[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1685( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1686( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1685) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1686[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1686( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1687( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1686) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1687[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1687( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1688( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1687) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1688[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1688( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1689( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1688) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1689[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1689( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1690( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1689) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1690[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1690( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1691( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1690) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1691[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1691( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1692( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1691) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1692[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1692( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1693( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1692) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1693[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1693( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1694( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1693) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1694[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1694( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1695( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1694) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1695[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1695( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1696( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1695) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1696[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1696( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1697( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1696) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1697[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1697( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1698( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1697) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1698[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1698( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1699( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1698) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1699[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1699( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1700( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1699) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1700[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1700( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1701( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1700) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1701[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1701( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1702( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1701) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1702[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1702( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1703( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1702) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1703[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1703( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1704( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1703) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1704[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1704( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1705( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1704) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1705[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1705( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1706( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1705) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1706[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1706( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1707( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1706) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1707[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1707( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1708( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1707) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1708[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1708( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1709( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1708) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1709[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1709( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1710( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1709) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1710[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1710( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1711( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1710) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1711[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1711( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1712( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1711) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1712[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1712( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1713( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1712) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1713[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1713( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1714( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1713) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1714[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1714( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1715( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1714) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1715[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1715( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1716( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1715) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1716[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1716( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1717( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1716) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1717[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1717( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1718( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1717) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1718[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1718( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1719( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1718) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1719[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1719( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1720( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1719) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1720[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1720( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1721( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1720) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1721[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1721( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1722( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1721) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1722[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1722( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1723( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1722) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1723[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1723( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1724( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1723) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1724[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1724( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1725( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1724) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1725[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1725( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1726( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1725) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1726[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1726( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1727( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1726) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1727[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1727( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1728( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1727) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1728[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1728( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1729( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1728) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1729[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1729( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1730( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1729) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1730[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1730( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1731( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1730) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1731[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1731( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1732( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1731) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1732[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1732( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1733( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1732) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1733[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1733( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1734( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1733) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1734[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1734( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1735( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1734) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1735[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1735( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1736( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1735) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1736[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1736( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1737( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1736) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1737[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1737( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1738( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1737) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1738[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1738( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1739( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1738) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1739[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1739( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1740( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1739) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1740[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1740( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1741( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1740) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1741[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1741( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1742( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1741) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1742[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1742( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1743( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1742) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1743[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1743( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1744( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1743) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1744[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1744( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1745( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1744) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1745[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1745( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1746( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1745) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1746[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1746( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1747( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1746) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1747[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1747( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1748( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1747) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1748[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1748( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1749( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1748) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1749[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1749( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1750( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1749) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1750[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1750( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1751( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1750) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1751[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1751( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1752( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1751) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1752[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1752( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1753( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1752) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1753[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1753( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1754( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1753) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1754[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1754( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1755( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1754) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1755[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1755( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1756( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1755) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1756[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1756( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1757( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1756) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1757[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1757( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1758( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1757) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1758[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1758( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1759( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1758) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1759[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1759( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1760( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1759) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1760[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1760( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1761( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1760) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1761[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1761( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1762( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1761) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1762[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1762( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1763( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1762) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1763[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1763( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1764( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1763) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1764[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1764( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1765( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1764) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1765[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1765( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1766( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1765) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1766[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1766( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1767( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1766) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1767[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1767( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1768( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1767) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1768[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1768( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1769( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1768) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1769[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1769( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1770( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1769) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1770[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1770( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1771( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1770) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1771[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1771( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1772( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1771) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1772[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1772( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1773( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1772) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1773[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1773( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1774( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1773) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1774[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1774( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1775( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1774) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1775[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1775( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1776( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1775) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1776[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1776( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1777( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1776) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1777[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1777( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1778( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1777) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1778[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1778( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1779( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1778) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1779[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1779( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1780( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1779) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1780[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1780( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1781( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1780) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1781[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1781( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1782( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1781) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1782[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1782( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1783( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1782) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1783[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1783( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1784( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1783) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1784[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1784( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1785( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1784) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1785[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1785( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1786( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1785) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1786[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1786( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1787( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1786) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1787[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1787( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1788( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1787) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1788[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1788( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1789( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1788) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1789[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1789( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1790( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1789) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1790[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1790( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1791( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1790) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1791[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1791( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1792( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1791) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1792[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1792( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1793( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1792) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1793[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1793( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1794( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1793) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1794[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1794( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1795( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1794) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1795[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1795( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1796( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1795) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1796[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1796( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1797( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1796) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1797[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1797( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1798( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1797) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1798[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1798( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1799( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1798) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1799[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1799( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1800( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1799) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1800[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1800( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1801( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1800) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1801[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1801( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1802( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1801) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1802[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1802( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1803( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1802) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1803[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1803( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1804( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1803) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1804[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1804( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1805( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1804) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1805[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1805( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1806( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1805) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1806[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1806( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1807( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1806) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1807[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1807( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1808( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1807) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1808[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1808( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1809( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1808) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1809[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1809( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1810( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1809) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1810[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1810( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1811( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1810) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1811[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1811( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1812( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1811) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1812[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1812( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1813( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1812) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1813[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1813( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1814( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1813) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1814[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1814( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1815( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1814) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1815[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1815( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1816( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1815) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1816[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1816( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1817( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1816) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1817[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1817( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1818( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1817) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1818[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1818( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1819( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1818) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1819[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1819( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1820( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1819) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1820[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1820( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1821( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1820) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1821[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1821( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1822( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1821) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1822[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1822( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1823( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1822) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1823[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1823( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1824( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1823) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1824[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1824( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1825( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1824) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1825[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1825( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1826( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1825) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1826[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1826( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1827( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1826) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1827[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1827( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1828( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1827) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1828[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1828( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1829( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1828) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1829[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1829( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1830( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1829) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1830[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1830( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1831( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1830) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1831[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1831( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1832( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1831) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1832[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1832( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1833( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1832) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1833[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1833( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1834( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1833) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1834[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1834( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1835( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1834) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1835[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1835( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1836( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1835) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1836[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1836( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1837( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1836) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1837[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1837( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1838( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1837) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1838[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1838( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1839( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1838) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1839[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1839( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1840( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1839) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1840[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1840( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1841( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1840) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1841[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1841( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1842( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1841) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1842[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1842( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1843( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1842) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1843[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1843( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1844( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1843) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1844[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1844( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1845( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1844) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1845[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1845( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1846( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1845) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1846[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1846( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1847( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1846) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1847[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1847( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1848( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1847) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1848[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1848( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1849( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1848) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1849[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1849( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1850( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1849) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1850[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1850( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1851( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1850) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1851[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1851( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1852( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1851) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1852[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1852( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1853( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1852) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1853[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1853( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1854( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1853) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1854[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1854( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1855( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1854) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1855[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1855( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1856( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1855) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1856[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1856( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1857( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1856) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1857[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1857( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1858( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1857) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1858[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1858( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1859( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1858) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1859[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1859( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1860( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1859) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1860[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1860( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1861( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1860) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1861[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1861( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1862( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1861) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1862[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1862( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1863( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1862) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1863[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1863( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1864( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1863) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1864[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1864( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1865( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1864) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1865[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1865( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1866( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1865) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1866[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1866( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1867( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1866) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1867[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1867( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1868( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1867) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1868[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1868( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1869( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1868) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1869[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1869( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1870( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1869) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1870[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1870( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1871( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1870) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1871[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1871( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1872( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1871) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1872[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1872( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1873( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1872) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1873[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1873( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1874( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1873) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1874[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1874( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1875( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1874) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1875[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1875( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1876( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1875) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1876[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1876( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1877( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1876) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1877[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1877( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1878( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1877) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1878[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1878( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1879( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1878) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1879[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1879( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1880( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1879) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1880[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1880( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1881( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1880) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1881[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1881( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1882( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1881) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1882[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1882( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1883( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1882) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1883[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1883( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1884( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1883) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1884[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1884( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1885( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1884) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1885[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1885( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1886( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1885) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1886[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1886( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1887( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1886) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1887[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1887( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1888( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1887) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1888[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1888( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1889( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1888) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1889[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1889( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1890( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1889) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1890[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1890( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1891( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1890) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1891[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1891( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1892( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1891) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1892[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1892( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1893( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1892) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1893[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1893( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1894( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1893) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1894[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1894( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1895( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1894) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1895[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1895( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1896( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1895) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1896[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1896( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1897( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1896) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1897[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1897( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1898( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1897) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1898[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1898( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1899( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1898) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1899[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1899( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1900( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1899) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1900[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1900( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1901( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1900) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1901[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1901( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1902( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1901) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1902[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1902( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1903( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1902) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1903[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1903( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1904( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1903) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1904[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1904( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1905( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1904) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1905[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1905( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1906( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1905) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1906[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1906( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1907( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1906) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1907[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1907( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1908( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1907) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1908[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1908( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1909( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1908) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1909[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1909( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1910( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1909) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1910[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1910( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1911( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1910) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1911[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1911( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1912( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1911) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1912[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1912( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1913( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1912) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1913[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1913( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1914( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1913) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1914[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1914( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1915( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1914) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1915[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1915( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1916( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1915) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1916[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1916( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1917( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1916) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1917[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1917( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1918( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1917) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1918[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1918( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1919( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1918) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1919[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1919( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1920( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1919) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1920[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1920( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1921( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1920) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1921[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1921( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1922( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1921) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1922[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1922( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1923( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1922) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1923[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1923( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1924( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1923) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1924[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1924( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1925( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1924) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1925[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1925( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1926( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1925) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1926[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1926( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1927( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1926) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1927[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1927( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1928( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1927) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1928[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1928( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1929( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1928) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1929[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1929( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1930( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1929) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1930[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1930( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1931( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1930) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1931[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1931( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1932( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1931) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1932[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1932( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1933( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1932) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1933[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1933( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1934( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1933) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1934[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1934( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1935( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1934) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1935[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1935( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1936( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1935) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1936[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1936( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1937( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1936) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1937[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1937( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1938( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1937) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1938[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1938( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1939( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1938) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1939[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1939( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1940( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1939) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1940[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1940( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1941( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1940) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1941[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1941( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1942( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1941) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1942[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1942( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1943( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1942) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1943[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1943( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1944( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1943) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1944[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1944( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1945( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1944) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1945[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1945( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1946( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1945) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1946[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1946( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1947( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1946) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1947[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1947( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1948( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1947) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1948[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1948( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1949( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1948) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1949[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1949( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1950( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1949) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1950[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1950( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1951( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1950) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1951[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1951( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1952( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1951) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1952[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1952( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1953( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1952) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1953[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1953( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1954( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1953) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1954[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1954( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1955( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1954) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1955[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1955( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1956( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1955) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1956[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1956( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1957( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1956) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1957[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1957( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1958( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1957) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1958[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1958( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1959( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1958) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1959[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1959( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1960( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1959) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1960[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1960( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1961( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1960) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1961[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1961( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1962( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1961) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1962[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1962( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1963( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1962) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1963[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1963( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1964( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1963) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1964[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1964( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1965( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1964) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1965[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1965( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1966( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1965) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1966[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1966( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1967( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1966) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1967[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1967( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1968( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1967) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1968[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1968( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1969( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1968) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1969[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1969( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1970( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1969) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1970[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1970( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1971( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1970) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1971[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1971( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1972( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1971) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1972[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1972( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1973( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1972) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1973[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1973( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1974( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1973) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1974[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1974( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1975( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1974) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1975[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1975( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1976( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1975) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1976[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1976( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1977( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1976) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1977[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1977( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1978( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1977) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1978[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1978( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1979( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1978) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1979[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1979( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1980( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1979) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1980[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1980( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1981( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1980) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1981[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1981( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1982( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1981) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1982[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1982( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1983( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1982) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1983[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1983( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1984( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1983) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1984[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1984( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1985( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1984) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1985[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1985( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1986( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1985) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1986[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1986( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1987( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1986) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1987[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1987( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1988( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1987) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1988[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1988( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1989( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1988) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1989[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1989( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1990( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1989) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1990[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1990( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1991( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1990) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1991[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1991( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1992( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1991) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1992[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1992( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1993( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1992) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1993[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1993( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1994( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1993) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1994[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1994( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1995( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1994) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1995[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1995( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1996( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1995) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1996[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1996( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1997( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1996) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1997[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1997( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1998( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1997) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1998[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1998( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc1999( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1998) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi1999[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc1999( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2000( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi1999) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2000[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2000( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2001( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2000) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2001[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2001( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2002( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2001) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2002[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2002( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2003( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2002) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2003[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2003( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2004( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2003) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2004[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2004( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2005( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2004) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2005[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2005( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2006( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2005) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2006[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2006( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2007( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2006) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2007[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2007( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2008( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2007) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2008[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2008( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2009( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2008) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2009[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2009( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2010( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2009) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2010[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2010( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2011( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2010) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2011[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2011( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2012( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2011) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2012[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2012( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2013( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2012) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2013[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2013( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2014( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2013) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2014[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2014( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2015( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2014) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2015[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2015( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2016( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2015) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2016[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2016( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2017( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2016) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2017[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2017( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2018( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2017) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2018[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2018( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2019( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2018) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2019[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2019( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2020( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2019) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2020[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2020( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2021( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2020) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2021[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2021( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2022( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2021) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2022[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2022( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2023( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2022) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2023[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2023( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2024( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2023) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2024[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2024( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2025( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2024) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2025[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2025( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2026( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2025) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2026[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2026( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2027( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2026) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2027[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2027( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2028( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2027) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2028[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2028( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2029( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2028) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2029[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2029( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2030( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2029) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2030[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2030( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2031( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2030) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2031[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2031( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2032( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2031) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2032[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2032( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2033( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2032) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2033[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2033( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2034( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2033) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2034[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2034( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2035( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2034) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2035[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2035( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2036( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2035) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2036[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2036( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2037( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2036) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2037[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2037( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2038( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2037) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2038[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2038( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2039( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2038) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2039[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2039( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2040( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2039) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2040[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2040( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2041( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2040) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2041[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2041( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2042( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2041) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2042[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2042( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2043( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2042) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2043[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2043( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2044( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2043) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2044[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2044( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2045( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2044) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2045[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2045( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2046( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2045) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2046[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2046( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2047( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2046) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2047[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2047( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2048( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2047) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2048[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2048( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2049( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2048) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2049[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2049( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2050( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2049) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2050[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2050( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2051( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2050) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2051[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2051( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2052( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2051) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2052[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2052( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2053( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2052) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2053[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2053( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2054( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2053) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2054[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2054( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2055( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2054) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2055[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2055( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2056( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2055) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2056[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2056( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2057( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2056) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2057[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2057( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2058( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2057) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2058[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2058( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2059( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2058) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2059[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2059( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2060( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2059) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2060[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2060( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2061( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2060) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2061[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2061( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2062( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2061) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2062[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2062( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2063( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2062) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2063[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2063( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2064( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2063) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2064[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2064( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2065( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2064) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2065[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2065( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2066( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2065) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2066[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2066( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2067( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2066) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2067[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2067( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2068( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2067) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2068[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2068( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2069( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2068) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2069[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2069( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2070( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2069) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2070[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2070( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2071( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2070) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2071[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2071( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2072( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2071) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2072[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2072( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2073( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2072) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2073[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2073( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2074( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2073) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2074[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2074( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2075( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2074) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2075[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2075( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2076( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2075) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2076[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2076( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2077( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2076) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2077[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2077( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2078( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2077) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2078[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2078( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2079( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2078) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2079[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2079( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2080( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2079) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2080[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2080( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2081( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2080) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2081[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2081( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2082( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2081) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2082[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2082( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2083( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2082) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2083[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2083( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2084( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2083) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2084[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2084( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2085( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2084) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2085[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2085( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2086( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2085) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2086[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2086( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2087( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2086) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2087[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2087( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2088( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2087) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2088[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2088( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2089( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2088) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2089[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2089( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2090( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2089) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2090[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2090( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2091( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2090) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2091[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2091( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2092( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2091) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2092[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2092( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2093( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2092) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2093[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2093( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2094( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2093) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2094[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2094( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2095( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2094) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2095[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2095( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2096( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2095) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2096[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2096( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2097( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2096) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2097[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2097( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2098( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2097) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2098[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2098( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2099( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2098) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2099[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2099( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2100( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2099) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2100[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2100( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2101( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2100) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2101[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2101( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2102( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2101) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2102[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2102( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2103( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2102) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2103[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2103( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2104( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2103) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2104[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2104( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2105( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2104) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2105[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2105( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2106( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2105) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2106[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2106( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2107( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2106) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2107[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2107( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2108( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2107) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2108[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2108( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2109( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2108) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2109[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2109( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2110( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2109) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2110[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2110( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2111( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2110) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2111[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2111( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2112( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2111) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2112[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2112( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2113( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2112) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2113[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2113( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2114( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2113) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2114[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2114( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2115( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2114) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2115[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2115( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2116( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2115) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2116[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2116( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2117( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2116) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2117[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2117( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2118( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2117) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2118[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2118( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2119( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2118) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2119[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2119( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2120( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2119) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2120[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2120( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2121( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2120) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2121[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2121( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2122( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2121) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2122[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2122( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2123( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2122) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2123[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2123( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2124( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2123) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2124[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2124( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2125( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2124) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2125[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2125( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2126( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2125) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2126[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2126( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2127( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2126) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2127[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2127( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2128( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2127) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2128[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2128( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2129( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2128) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2129[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2129( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2130( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2129) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2130[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2130( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2131( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2130) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2131[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2131( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2132( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2131) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2132[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2132( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2133( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2132) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2133[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2133( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2134( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2133) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2134[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2134( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2135( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2134) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2135[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2135( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2136( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2135) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2136[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2136( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2137( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2136) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2137[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2137( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2138( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2137) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2138[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2138( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2139( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2138) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2139[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2139( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2140( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2139) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2140[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2140( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2141( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2140) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2141[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2141( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2142( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2141) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2142[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2142( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2143( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2142) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2143[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2143( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2144( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2143) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2144[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2144( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2145( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2144) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2145[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2145( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2146( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2145) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2146[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2146( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2147( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2146) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2147[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2147( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2148( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2147) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2148[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2148( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2149( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2148) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2149[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2149( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2150( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2149) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2150[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2150( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2151( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2150) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2151[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2151( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2152( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2151) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2152[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2152( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2153( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2152) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2153[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2153( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2154( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2153) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2154[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2154( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2155( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2154) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2155[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2155( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2156( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2155) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2156[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2156( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2157( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2156) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2157[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2157( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2158( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2157) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2158[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2158( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2159( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2158) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2159[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2159( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2160( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2159) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2160[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2160( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2161( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2160) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2161[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2161( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2162( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2161) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2162[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2162( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2163( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2162) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2163[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2163( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2164( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2163) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2164[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2164( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2165( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2164) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2165[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2165( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2166( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2165) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2166[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2166( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2167( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2166) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2167[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2167( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2168( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2167) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2168[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2168( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2169( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2168) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2169[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2169( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2170( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2169) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2170[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2170( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2171( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2170) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2171[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2171( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2172( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2171) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2172[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2172( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2173( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2172) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2173[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2173( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2174( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2173) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2174[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2174( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2175( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2174) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2175[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2175( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2176( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2175) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2176[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2176( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2177( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2176) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2177[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2177( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2178( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2177) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2178[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2178( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2179( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2178) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2179[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2179( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2180( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2179) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2180[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2180( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2181( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2180) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2181[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2181( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2182( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2181) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2182[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2182( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2183( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2182) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2183[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2183( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2184( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2183) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2184[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2184( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2185( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2184) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2185[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2185( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2186( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2185) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2186[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2186( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2187( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2186) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2187[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2187( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2188( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2187) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2188[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2188( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2189( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2188) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2189[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2189( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2190( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2189) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2190[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2190( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2191( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2190) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2191[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2191( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2192( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2191) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2192[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2192( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2193( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2192) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2193[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2193( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2194( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2193) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2194[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2194( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2195( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2194) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2195[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2195( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2196( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2195) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2196[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2196( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2197( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2196) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2197[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2197( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2198( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2197) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2198[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2198( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2199( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2198) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2199[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2199( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2200( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2199) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2200[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2200( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2201( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2200) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2201[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2201( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2202( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2201) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2202[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2202( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2203( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2202) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2203[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2203( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2204( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2203) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2204[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2204( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2205( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2204) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2205[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2205( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2206( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2205) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2206[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2206( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2207( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2206) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2207[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2207( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2208( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2207) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2208[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2208( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2209( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2208) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2209[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2209( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2210( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2209) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2210[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2210( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2211( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2210) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2211[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2211( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2212( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2211) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2212[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2212( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2213( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2212) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2213[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2213( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2214( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2213) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2214[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2214( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2215( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2214) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2215[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2215( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2216( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2215) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2216[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2216( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2217( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2216) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2217[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2217( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2218( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2217) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2218[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2218( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2219( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2218) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2219[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2219( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2220( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2219) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2220[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2220( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2221( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2220) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2221[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2221( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2222( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2221) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2222[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2222( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2223( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2222) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2223[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2223( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2224( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2223) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2224[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2224( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2225( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2224) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2225[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2225( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2226( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2225) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2226[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2226( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2227( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2226) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2227[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2227( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2228( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2227) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2228[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2228( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2229( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2228) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2229[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2229( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2230( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2229) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2230[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2230( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2231( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2230) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2231[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2231( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2232( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2231) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2232[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2232( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2233( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2232) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2233[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2233( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2234( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2233) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2234[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2234( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2235( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2234) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2235[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2235( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2236( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2235) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2236[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2236( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2237( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2236) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2237[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2237( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2238( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2237) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2238[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2238( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2239( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2238) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2239[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2239( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2240( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2239) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2240[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2240( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2241( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2240) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2241[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2241( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2242( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2241) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2242[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2242( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2243( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2242) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2243[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2243( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2244( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2243) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2244[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2244( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2245( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2244) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2245[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2245( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2246( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2245) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2246[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2246( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2247( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2246) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2247[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2247( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2248( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2247) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2248[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2248( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2249( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2248) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2249[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2249( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2250( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2249) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2250[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2250( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2251( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2250) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2251[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2251( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2252( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2251) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2252[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2252( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2253( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2252) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2253[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2253( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2254( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2253) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2254[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2254( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2255( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2254) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2255[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2255( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2256( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2255) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2256[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2256( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2257( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2256) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2257[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2257( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2258( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2257) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2258[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2258( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2259( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2258) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2259[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2259( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2260( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2259) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2260[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2260( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2261( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2260) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2261[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2261( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2262( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2261) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2262[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2262( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2263( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2262) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2263[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2263( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2264( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2263) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2264[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2264( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2265( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2264) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2265[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2265( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2266( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2265) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2266[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2266( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2267( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2266) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2267[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2267( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2268( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2267) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2268[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2268( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2269( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2268) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2269[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2269( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2270( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2269) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2270[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2270( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2271( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2270) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2271[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2271( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2272( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2271) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2272[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2272( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2273( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2272) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2273[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2273( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2274( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2273) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2274[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2274( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2275( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2274) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2275[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2275( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2276( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2275) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2276[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2276( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2277( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2276) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2277[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2277( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2278( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2277) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2278[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2278( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2279( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2278) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2279[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2279( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2280( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2279) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2280[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2280( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2281( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2280) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2281[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2281( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2282( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2281) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2282[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2282( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2283( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2282) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2283[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2283( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2284( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2283) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2284[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2284( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2285( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2284) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2285[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2285( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2286( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2285) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2286[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2286( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2287( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2286) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2287[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2287( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2288( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2287) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2288[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2288( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2289( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2288) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2289[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2289( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2290( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2289) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2290[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2290( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2291( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2290) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2291[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2291( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2292( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2291) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2292[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2292( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2293( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2292) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2293[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2293( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2294( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2293) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2294[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2294( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2295( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2294) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2295[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2295( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2296( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2295) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2296[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2296( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2297( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2296) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2297[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2297( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2298( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2297) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2298[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2298( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2299( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2298) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2299[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2299( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2300( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2299) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2300[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2300( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2301( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2300) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2301[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2301( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2302( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2301) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2302[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2302( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2303( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2302) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2303[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2303( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2304( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2303) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2304[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2304( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2305( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2304) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2305[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2305( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2306( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2305) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2306[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2306( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2307( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2306) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2307[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2307( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2308( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2307) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2308[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2308( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2309( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2308) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2309[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2309( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2310( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2309) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2310[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2310( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2311( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2310) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2311[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2311( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2312( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2311) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2312[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2312( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2313( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2312) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2313[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2313( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2314( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2313) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2314[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2314( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2315( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2314) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2315[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2315( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2316( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2315) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2316[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2316( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2317( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2316) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2317[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2317( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2318( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2317) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2318[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2318( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2319( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2318) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2319[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2319( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2320( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2319) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2320[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2320( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2321( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2320) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2321[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2321( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2322( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2321) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2322[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2322( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2323( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2322) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2323[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2323( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2324( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2323) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2324[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2324( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2325( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2324) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2325[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2325( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2326( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2325) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2326[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2326( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2327( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2326) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2327[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2327( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2328( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2327) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2328[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2328( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2329( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2328) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2329[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2329( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2330( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2329) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2330[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2330( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2331( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2330) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2331[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2331( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2332( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2331) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2332[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2332( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2333( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2332) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2333[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2333( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2334( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2333) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2334[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2334( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2335( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2334) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2335[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2335( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2336( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2335) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2336[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2336( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2337( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2336) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2337[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2337( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2338( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2337) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2338[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2338( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2339( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2338) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2339[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2339( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2340( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2339) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2340[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2340( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2341( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2340) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2341[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2341( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2342( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2341) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2342[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2342( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2343( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2342) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2343[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2343( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2344( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2343) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2344[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2344( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2345( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2344) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2345[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2345( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2346( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2345) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2346[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2346( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2347( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2346) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2347[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2347( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2348( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2347) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2348[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2348( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2349( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2348) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2349[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2349( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2350( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2349) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2350[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2350( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2351( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2350) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2351[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2351( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2352( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2351) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2352[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2352( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2353( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2352) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2353[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2353( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2354( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2353) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2354[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2354( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2355( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2354) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2355[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2355( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2356( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2355) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2356[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2356( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2357( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2356) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2357[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2357( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2358( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2357) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2358[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2358( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2359( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2358) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2359[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2359( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2360( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2359) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2360[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2360( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2361( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2360) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2361[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2361( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2362( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2361) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2362[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2362( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2363( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2362) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2363[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2363( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2364( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2363) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2364[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2364( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2365( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2364) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2365[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2365( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2366( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2365) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2366[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2366( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2367( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2366) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2367[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2367( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2368( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2367) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2368[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2368( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2369( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2368) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2369[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2369( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2370( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2369) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2370[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2370( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2371( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2370) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2371[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2371( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2372( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2371) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2372[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2372( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2373( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2372) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2373[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2373( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2374( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2373) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2374[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2374( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2375( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2374) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2375[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2375( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2376( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2375) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2376[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2376( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2377( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2376) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2377[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2377( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2378( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2377) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2378[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2378( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2379( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2378) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2379[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2379( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2380( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2379) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2380[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2380( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2381( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2380) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2381[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2381( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2382( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2381) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2382[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2382( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2383( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2382) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2383[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2383( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2384( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2383) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2384[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2384( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2385( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2384) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2385[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2385( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2386( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2385) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2386[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2386( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2387( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2386) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2387[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2387( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2388( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2387) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2388[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2388( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2389( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2388) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2389[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2389( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2390( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2389) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2390[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2390( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2391( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2390) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2391[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2391( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2392( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2391) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2392[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2392( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2393( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2392) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2393[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2393( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2394( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2393) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2394[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2394( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2395( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2394) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2395[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2395( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2396( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2395) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2396[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2396( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2397( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2396) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2397[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2397( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2398( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2397) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2398[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2398( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2399( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2398) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2399[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2399( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2400( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2399) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2400[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2400( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2401( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2400) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2401[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2401( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2402( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2401) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2402[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2402( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2403( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2402) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2403[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2403( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2404( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2403) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2404[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2404( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2405( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2404) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2405[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2405( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2406( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2405) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2406[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2406( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2407( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2406) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2407[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2407( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2408( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2407) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2408[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2408( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2409( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2408) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2409[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2409( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2410( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2409) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2410[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2410( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2411( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2410) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2411[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2411( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2412( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2411) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2412[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2412( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2413( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2412) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2413[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2413( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2414( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2413) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2414[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2414( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2415( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2414) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2415[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2415( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2416( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2415) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2416[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2416( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2417( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2416) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2417[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2417( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2418( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2417) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2418[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2418( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2419( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2418) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2419[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2419( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2420( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2419) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2420[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2420( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2421( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2420) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2421[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2421( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2422( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2421) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2422[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2422( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2423( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2422) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2423[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2423( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2424( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2423) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2424[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2424( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2425( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2424) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2425[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2425( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2426( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2425) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2426[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2426( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2427( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2426) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2427[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2427( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2428( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2427) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2428[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2428( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2429( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2428) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2429[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2429( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2430( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2429) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2430[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2430( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2431( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2430) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2431[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2431( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2432( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2431) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2432[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2432( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2433( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2432) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2433[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2433( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2434( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2433) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2434[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2434( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2435( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2434) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2435[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2435( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2436( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2435) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2436[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2436( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2437( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2436) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2437[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2437( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2438( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2437) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2438[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2438( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2439( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2438) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2439[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2439( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2440( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2439) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2440[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2440( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2441( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2440) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2441[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2441( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2442( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2441) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2442[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2442( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2443( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2442) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2443[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2443( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2444( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2443) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2444[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2444( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2445( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2444) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2445[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2445( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2446( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2445) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2446[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2446( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2447( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2446) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2447[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2447( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2448( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2447) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2448[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2448( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2449( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2448) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2449[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2449( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2450( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2449) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2450[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2450( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2451( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2450) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2451[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2451( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2452( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2451) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2452[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2452( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2453( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2452) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2453[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2453( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2454( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2453) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2454[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2454( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2455( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2454) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2455[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2455( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2456( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2455) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2456[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2456( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2457( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2456) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2457[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2457( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2458( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2457) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2458[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2458( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2459( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2458) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2459[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2459( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2460( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2459) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2460[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2460( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2461( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2460) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2461[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2461( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2462( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2461) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2462[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2462( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2463( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2462) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2463[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2463( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2464( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2463) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2464[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2464( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2465( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2464) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2465[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2465( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2466( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2465) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2466[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2466( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2467( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2466) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2467[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2467( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2468( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2467) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2468[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2468( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2469( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2468) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2469[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2469( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2470( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2469) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2470[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2470( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2471( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2470) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2471[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2471( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2472( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2471) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2472[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2472( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2473( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2472) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2473[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2473( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2474( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2473) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2474[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2474( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2475( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2474) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2475[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2475( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2476( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2475) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2476[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2476( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2477( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2476) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2477[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2477( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2478( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2477) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2478[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2478( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2479( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2478) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2479[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2479( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2480( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2479) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2480[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2480( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2481( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2480) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2481[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2481( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2482( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2481) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2482[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2482( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2483( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2482) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2483[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2483( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2484( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2483) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2484[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2484( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2485( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2484) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2485[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2485( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2486( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2485) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2486[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2486( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2487( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2486) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2487[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2487( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2488( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2487) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2488[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2488( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2489( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2488) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2489[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2489( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2490( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2489) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2490[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2490( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2491( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2490) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2491[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2491( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2492( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2491) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2492[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2492( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2493( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2492) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2493[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2493( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2494( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2493) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2494[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2494( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2495( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2494) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2495[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2495( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2496( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2495) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2496[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2496( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2497( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2496) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2497[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2497( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2498( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2497) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2498[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2498( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2499( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2498) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2499[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2499( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2500( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2499) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2500[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2500( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2501( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2500) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2501[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2501( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2502( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2501) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2502[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2502( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2503( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2502) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2503[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2503( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2504( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2503) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2504[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2504( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2505( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2504) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2505[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2505( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2506( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2505) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2506[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2506( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2507( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2506) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2507[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2507( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2508( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2507) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2508[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2508( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2509( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2508) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2509[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2509( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2510( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2509) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2510[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2510( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2511( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2510) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2511[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2511( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2512( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2511) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2512[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2512( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2513( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2512) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2513[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2513( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2514( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2513) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2514[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2514( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2515( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2514) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2515[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2515( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2516( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2515) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2516[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2516( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2517( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2516) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2517[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2517( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2518( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2517) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2518[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2518( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2519( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2518) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2519[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2519( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2520( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2519) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2520[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2520( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2521( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2520) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2521[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2521( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2522( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2521) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2522[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2522( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2523( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2522) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2523[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2523( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2524( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2523) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2524[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2524( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2525( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2524) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2525[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2525( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2526( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2525) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2526[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2526( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2527( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2526) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2527[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2527( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2528( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2527) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2528[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2528( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2529( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2528) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2529[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2529( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2530( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2529) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2530[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2530( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2531( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2530) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2531[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2531( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2532( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2531) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2532[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2532( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2533( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2532) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2533[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2533( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2534( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2533) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2534[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2534( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2535( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2534) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2535[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2535( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2536( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2535) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2536[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2536( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2537( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2536) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2537[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2537( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2538( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2537) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2538[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2538( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2539( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2538) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2539[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2539( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2540( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2539) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2540[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2540( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2541( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2540) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2541[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2541( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2542( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2541) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2542[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2542( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2543( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2542) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2543[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2543( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2544( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2543) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2544[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2544( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2545( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2544) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2545[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2545( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2546( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2545) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2546[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2546( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2547( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2546) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2547[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2547( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2548( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2547) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2548[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2548( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2549( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2548) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2549[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2549( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2550( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2549) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2550[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2550( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2551( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2550) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2551[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2551( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2552( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2551) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2552[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2552( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2553( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2552) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2553[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2553( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2554( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2553) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2554[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2554( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2555( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2554) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2555[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2555( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2556( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2555) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2556[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2556( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2557( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2556) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2557[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2557( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2558( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2557) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2558[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2558( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2559( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2558) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2559[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2559( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2560( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2559) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2560[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2560( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2561( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2560) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2561[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2561( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2562( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2561) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2562[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2562( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2563( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2562) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2563[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2563( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2564( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2563) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2564[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2564( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2565( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2564) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2565[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2565( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2566( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2565) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2566[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2566( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2567( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2566) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2567[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2567( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2568( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2567) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2568[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2568( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2569( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2568) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2569[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2569( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2570( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2569) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2570[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2570( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2571( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2570) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2571[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2571( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2572( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2571) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2572[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2572( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2573( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2572) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2573[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2573( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2574( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2573) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2574[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2574( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2575( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2574) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2575[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2575( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2576( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2575) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2576[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2576( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2577( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2576) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2577[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2577( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2578( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2577) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2578[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2578( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2579( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2578) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2579[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2579( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2580( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2579) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2580[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2580( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2581( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2580) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2581[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2581( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2582( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2581) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2582[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2582( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2583( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2582) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2583[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2583( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2584( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2583) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2584[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2584( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2585( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2584) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2585[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2585( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2586( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2585) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2586[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2586( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2587( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2586) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2587[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2587( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2588( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2587) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2588[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2588( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2589( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2588) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2589[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2589( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2590( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2589) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2590[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2590( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2591( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2590) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2591[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2591( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2592( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2591) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2592[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2592( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2593( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2592) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2593[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2593( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2594( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2593) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2594[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2594( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2595( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2594) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2595[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2595( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2596( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2595) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2596[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2596( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2597( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2596) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2597[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2597( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2598( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2597) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2598[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2598( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2599( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2598) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2599[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2599( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2600( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2599) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2600[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2600( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2601( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2600) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2601[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2601( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2602( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2601) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2602[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2602( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2603( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2602) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2603[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2603( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2604( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2603) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2604[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2604( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2605( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2604) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2605[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2605( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2606( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2605) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2606[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2606( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2607( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2606) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2607[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2607( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2608( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2607) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2608[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2608( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2609( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2608) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2609[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2609( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2610( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2609) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2610[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2610( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2611( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2610) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2611[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2611( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2612( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2611) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2612[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2612( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2613( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2612) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2613[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2613( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2614( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2613) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2614[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2614( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2615( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2614) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2615[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2615( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2616( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2615) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2616[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2616( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2617( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2616) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2617[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2617( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2618( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2617) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2618[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2618( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2619( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2618) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2619[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2619( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2620( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2619) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2620[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2620( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2621( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2620) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2621[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2621( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2622( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2621) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2622[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2622( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2623( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2622) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2623[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2623( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2624( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2623) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2624[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2624( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2625( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2624) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2625[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2625( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2626( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2625) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2626[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2626( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2627( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2626) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2627[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2627( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2628( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2627) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2628[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2628( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2629( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2628) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2629[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2629( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2630( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2629) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2630[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2630( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2631( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2630) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2631[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2631( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2632( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2631) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2632[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2632( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2633( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2632) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2633[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2633( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2634( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2633) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2634[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2634( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2635( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2634) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2635[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2635( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2636( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2635) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2636[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2636( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2637( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2636) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2637[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2637( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2638( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2637) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2638[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2638( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2639( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2638) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2639[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2639( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2640( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2639) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2640[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2640( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2641( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2640) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2641[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2641( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2642( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2641) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2642[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2642( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2643( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2642) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2643[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2643( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2644( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2643) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2644[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2644( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2645( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2644) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2645[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2645( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2646( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2645) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2646[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2646( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2647( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2646) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2647[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2647( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2648( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2647) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2648[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2648( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2649( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2648) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2649[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2649( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2650( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2649) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2650[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2650( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2651( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2650) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2651[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2651( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2652( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2651) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2652[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2652( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2653( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2652) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2653[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2653( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2654( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2653) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2654[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2654( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2655( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2654) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2655[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2655( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2656( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2655) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2656[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2656( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2657( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2656) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2657[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2657( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2658( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2657) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2658[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2658( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2659( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2658) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2659[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2659( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2660( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2659) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2660[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2660( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2661( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2660) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2661[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2661( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2662( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2661) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2662[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2662( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2663( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2662) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2663[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2663( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2664( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2663) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2664[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2664( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2665( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2664) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2665[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2665( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2666( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2665) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2666[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2666( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2667( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2666) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2667[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2667( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2668( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2667) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2668[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2668( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2669( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2668) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2669[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2669( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2670( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2669) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2670[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2670( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2671( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2670) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2671[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2671( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2672( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2671) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2672[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2672( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2673( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2672) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2673[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2673( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2674( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2673) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2674[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2674( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2675( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2674) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2675[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2675( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2676( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2675) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2676[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2676( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2677( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2676) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2677[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2677( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2678( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2677) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2678[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2678( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2679( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2678) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2679[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2679( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2680( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2679) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2680[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2680( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2681( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2680) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2681[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2681( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2682( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2681) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2682[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2682( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2683( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2682) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2683[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2683( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2684( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2683) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2684[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2684( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2685( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2684) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2685[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2685( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2686( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2685) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2686[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2686( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2687( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2686) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2687[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2687( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2688( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2687) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2688[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2688( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2689( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2688) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2689[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2689( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2690( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2689) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2690[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2690( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2691( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2690) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2691[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2691( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2692( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2691) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2692[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2692( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2693( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2692) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2693[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2693( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2694( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2693) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2694[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2694( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2695( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2694) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2695[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2695( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2696( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2695) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2696[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2696( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2697( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2696) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2697[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2697( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2698( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2697) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2698[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2698( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2699( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2698) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2699[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2699( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2700( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2699) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2700[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2700( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2701( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2700) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2701[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2701( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2702( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2701) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2702[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2702( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2703( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2702) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2703[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2703( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2704( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2703) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2704[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2704( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2705( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2704) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2705[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2705( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2706( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2705) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2706[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2706( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2707( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2706) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2707[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2707( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2708( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2707) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2708[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2708( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2709( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2708) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2709[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2709( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2710( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2709) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2710[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2710( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2711( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2710) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2711[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2711( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2712( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2711) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2712[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2712( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2713( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2712) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2713[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2713( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2714( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2713) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2714[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2714( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2715( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2714) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2715[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2715( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2716( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2715) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2716[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2716( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2717( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2716) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2717[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2717( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2718( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2717) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2718[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2718( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2719( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2718) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2719[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2719( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2720( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2719) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2720[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2720( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2721( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2720) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2721[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2721( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2722( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2721) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2722[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2722( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2723( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2722) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2723[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2723( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2724( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2723) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2724[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2724( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2725( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2724) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2725[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2725( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2726( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2725) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2726[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2726( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2727( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2726) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2727[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2727( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2728( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2727) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2728[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2728( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2729( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2728) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2729[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2729( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2730( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2729) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2730[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2730( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2731( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2730) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2731[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2731( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2732( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2731) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2732[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2732( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2733( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2732) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2733[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2733( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2734( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2733) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2734[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2734( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2735( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2734) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2735[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2735( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2736( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2735) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2736[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2736( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2737( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2736) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2737[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2737( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2738( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2737) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2738[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2738( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2739( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2738) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2739[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2739( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2740( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2739) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2740[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2740( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2741( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2740) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2741[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2741( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2742( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2741) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2742[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2742( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2743( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2742) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2743[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2743( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2744( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2743) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2744[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2744( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2745( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2744) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2745[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2745( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2746( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2745) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2746[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2746( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2747( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2746) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2747[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2747( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2748( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2747) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2748[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2748( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2749( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2748) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2749[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2749( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2750( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2749) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2750[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2750( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2751( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2750) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2751[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2751( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2752( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2751) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2752[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2752( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2753( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2752) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2753[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2753( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2754( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2753) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2754[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2754( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2755( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2754) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2755[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2755( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2756( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2755) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2756[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2756( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2757( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2756) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2757[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2757( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2758( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2757) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2758[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2758( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2759( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2758) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2759[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2759( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2760( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2759) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2760[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2760( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2761( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2760) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2761[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2761( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2762( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2761) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2762[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2762( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2763( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2762) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2763[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2763( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2764( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2763) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2764[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2764( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2765( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2764) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2765[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2765( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2766( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2765) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2766[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2766( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2767( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2766) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2767[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2767( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2768( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2767) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2768[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2768( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2769( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2768) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2769[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2769( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2770( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2769) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2770[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2770( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2771( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2770) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2771[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2771( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2772( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2771) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2772[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2772( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2773( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2772) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2773[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2773( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2774( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2773) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2774[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2774( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2775( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2774) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2775[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2775( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2776( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2775) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2776[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2776( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2777( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2776) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2777[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2777( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2778( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2777) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2778[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2778( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2779( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2778) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2779[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2779( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2780( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2779) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2780[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2780( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2781( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2780) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2781[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2781( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2782( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2781) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2782[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2782( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2783( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2782) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2783[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2783( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2784( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2783) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2784[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2784( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2785( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2784) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2785[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2785( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2786( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2785) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2786[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2786( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2787( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2786) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2787[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2787( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2788( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2787) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2788[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2788( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2789( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2788) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2789[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2789( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2790( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2789) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2790[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2790( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2791( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2790) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2791[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2791( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2792( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2791) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2792[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2792( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2793( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2792) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2793[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2793( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2794( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2793) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2794[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2794( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2795( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2794) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2795[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2795( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2796( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2795) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2796[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2796( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2797( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2796) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2797[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2797( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2798( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2797) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2798[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2798( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2799( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2798) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2799[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2799( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2800( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2799) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2800[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2800( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2801( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2800) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2801[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2801( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2802( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2801) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2802[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2802( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2803( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2802) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2803[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2803( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2804( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2803) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2804[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2804( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2805( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2804) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2805[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2805( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2806( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2805) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2806[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2806( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2807( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2806) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2807[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2807( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2808( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2807) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2808[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2808( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2809( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2808) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2809[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2809( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2810( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2809) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2810[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2810( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2811( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2810) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2811[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2811( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2812( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2811) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2812[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2812( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2813( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2812) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2813[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2813( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2814( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2813) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2814[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2814( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2815( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2814) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2815[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2815( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2816( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2815) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2816[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2816( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2817( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2816) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2817[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2817( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2818( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2817) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2818[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2818( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2819( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2818) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2819[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2819( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2820( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2819) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2820[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2820( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2821( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2820) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2821[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2821( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2822( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2821) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2822[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2822( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2823( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2822) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2823[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2823( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2824( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2823) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2824[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2824( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2825( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2824) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2825[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2825( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2826( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2825) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2826[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2826( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2827( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2826) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2827[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2827( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2828( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2827) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2828[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2828( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2829( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2828) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2829[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2829( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2830( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2829) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2830[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2830( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2831( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2830) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2831[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2831( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2832( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2831) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2832[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2832( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2833( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2832) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2833[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2833( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2834( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2833) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2834[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2834( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2835( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2834) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2835[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2835( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2836( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2835) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2836[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2836( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2837( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2836) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2837[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2837( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2838( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2837) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2838[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2838( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2839( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2838) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2839[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2839( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2840( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2839) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2840[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2840( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2841( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2840) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2841[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2841( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2842( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2841) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2842[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2842( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2843( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2842) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2843[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2843( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2844( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2843) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2844[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2844( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2845( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2844) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2845[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2845( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2846( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2845) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2846[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2846( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2847( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2846) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2847[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2847( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2848( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2847) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2848[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2848( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2849( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2848) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2849[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2849( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2850( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2849) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2850[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2850( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2851( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2850) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2851[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2851( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2852( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2851) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2852[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2852( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2853( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2852) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2853[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2853( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2854( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2853) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2854[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2854( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2855( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2854) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2855[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2855( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2856( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2855) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2856[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2856( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2857( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2856) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2857[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2857( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2858( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2857) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2858[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2858( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2859( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2858) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2859[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2859( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2860( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2859) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2860[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2860( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2861( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2860) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2861[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2861( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2862( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2861) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2862[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2862( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2863( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2862) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2863[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2863( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2864( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2863) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2864[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2864( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2865( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2864) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2865[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2865( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2866( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2865) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2866[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2866( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2867( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2866) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2867[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2867( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2868( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2867) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2868[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2868( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2869( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2868) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2869[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2869( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2870( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2869) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2870[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2870( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2871( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2870) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2871[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2871( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2872( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2871) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2872[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2872( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2873( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2872) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2873[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2873( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2874( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2873) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2874[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2874( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2875( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2874) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2875[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2875( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2876( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2875) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2876[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2876( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2877( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2876) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2877[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2877( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2878( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2877) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2878[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2878( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2879( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2878) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2879[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2879( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2880( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2879) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2880[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2880( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2881( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2880) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2881[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2881( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2882( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2881) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2882[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2882( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2883( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2882) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2883[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2883( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2884( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2883) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2884[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2884( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2885( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2884) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2885[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2885( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2886( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2885) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2886[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2886( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2887( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2886) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2887[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2887( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2888( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2887) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2888[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2888( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2889( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2888) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2889[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2889( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2890( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2889) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2890[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2890( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2891( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2890) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2891[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2891( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2892( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2891) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2892[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2892( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2893( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2892) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2893[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2893( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2894( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2893) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2894[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2894( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2895( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2894) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2895[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2895( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2896( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2895) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2896[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2896( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2897( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2896) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2897[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2897( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2898( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2897) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2898[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2898( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2899( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2898) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2899[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2899( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2900( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2899) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2900[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2900( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2901( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2900) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2901[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2901( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2902( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2901) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2902[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2902( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2903( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2902) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2903[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2903( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2904( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2903) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2904[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2904( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2905( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2904) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2905[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2905( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2906( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2905) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2906[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2906( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2907( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2906) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2907[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2907( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2908( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2907) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2908[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2908( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2909( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2908) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2909[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2909( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2910( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2909) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2910[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2910( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2911( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2910) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2911[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2911( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2912( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2911) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2912[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2912( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2913( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2912) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2913[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2913( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2914( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2913) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2914[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2914( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2915( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2914) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2915[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2915( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2916( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2915) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2916[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2916( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2917( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2916) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2917[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2917( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2918( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2917) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2918[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2918( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2919( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2918) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2919[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2919( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2920( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2919) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2920[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2920( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2921( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2920) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2921[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2921( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2922( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2921) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2922[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2922( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2923( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2922) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2923[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2923( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2924( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2923) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2924[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2924( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2925( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2924) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2925[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2925( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2926( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2925) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2926[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2926( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2927( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2926) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2927[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2927( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2928( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2927) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2928[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2928( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2929( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2928) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2929[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2929( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2930( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2929) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2930[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2930( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2931( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2930) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2931[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2931( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2932( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2931) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2932[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2932( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2933( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2932) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2933[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2933( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2934( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2933) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2934[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2934( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2935( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2934) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2935[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2935( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2936( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2935) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2936[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2936( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2937( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2936) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2937[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2937( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2938( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2937) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2938[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2938( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2939( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2938) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2939[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2939( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2940( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2939) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2940[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2940( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2941( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2940) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2941[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2941( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2942( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2941) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2942[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2942( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2943( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2942) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2943[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2943( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2944( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2943) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2944[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2944( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2945( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2944) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2945[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2945( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2946( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2945) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2946[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2946( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2947( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2946) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2947[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2947( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2948( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2947) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2948[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2948( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2949( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2948) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2949[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2949( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2950( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2949) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2950[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2950( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2951( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2950) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2951[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2951( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2952( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2951) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2952[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2952( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2953( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2952) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2953[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2953( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2954( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2953) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2954[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2954( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2955( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2954) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2955[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2955( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2956( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2955) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2956[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2956( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2957( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2956) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2957[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2957( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2958( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2957) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2958[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2958( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2959( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2958) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2959[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2959( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2960( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2959) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2960[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2960( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2961( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2960) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2961[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2961( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2962( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2961) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2962[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2962( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2963( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2962) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2963[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2963( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2964( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2963) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2964[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2964( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2965( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2964) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2965[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2965( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2966( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2965) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2966[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2966( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2967( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2966) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2967[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2967( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2968( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2967) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2968[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2968( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2969( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2968) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2969[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2969( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2970( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2969) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2970[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2970( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2971( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2970) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2971[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2971( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2972( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2971) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2972[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2972( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2973( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2972) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2973[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2973( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2974( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2973) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2974[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2974( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2975( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2974) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2975[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2975( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2976( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2975) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2976[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2976( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2977( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2976) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2977[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2977( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2978( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2977) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2978[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2978( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2979( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2978) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2979[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2979( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2980( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2979) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2980[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2980( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2981( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2980) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2981[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2981( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2982( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2981) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2982[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2982( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2983( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2982) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2983[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2983( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2984( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2983) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2984[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2984( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2985( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2984) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2985[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2985( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2986( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2985) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2986[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2986( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2987( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2986) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2987[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2987( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2988( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2987) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2988[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2988( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2989( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2988) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2989[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2989( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2990( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2989) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2990[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2990( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2991( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2990) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2991[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2991( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2992( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2991) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2992[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2992( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2993( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2992) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2993[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2993( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2994( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2993) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2994[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2994( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2995( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2994) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2995[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2995( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2996( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2995) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2996[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2996( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2997( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2996) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2997[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2997( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2998( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2997) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2998[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2998( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc2999( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2998) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi2999[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc2999( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3000( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi2999) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3000[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3000( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3001( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3000) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3001[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3001( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3002( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3001) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3002[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3002( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3003( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3002) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3003[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3003( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3004( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3003) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3004[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3004( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3005( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3004) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3005[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3005( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3006( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3005) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3006[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3006( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3007( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3006) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3007[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3007( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3008( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3007) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3008[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3008( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3009( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3008) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3009[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3009( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3010( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3009) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3010[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3010( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3011( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3010) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3011[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3011( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3012( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3011) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3012[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3012( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3013( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3012) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3013[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3013( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3014( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3013) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3014[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3014( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3015( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3014) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3015[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3015( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3016( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3015) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3016[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3016( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3017( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3016) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3017[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3017( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3018( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3017) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3018[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3018( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3019( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3018) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3019[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3019( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3020( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3019) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3020[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3020( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3021( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3020) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3021[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3021( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3022( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3021) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3022[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3022( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3023( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3022) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3023[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3023( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3024( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3023) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3024[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3024( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3025( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3024) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3025[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3025( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3026( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3025) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3026[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3026( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3027( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3026) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3027[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3027( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3028( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3027) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3028[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3028( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3029( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3028) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3029[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3029( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3030( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3029) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3030[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3030( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3031( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3030) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3031[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3031( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3032( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3031) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3032[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3032( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3033( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3032) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3033[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3033( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3034( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3033) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3034[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3034( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3035( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3034) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3035[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3035( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3036( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3035) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3036[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3036( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3037( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3036) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3037[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3037( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3038( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3037) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3038[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3038( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3039( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3038) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3039[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3039( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3040( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3039) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3040[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3040( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3041( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3040) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3041[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3041( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3042( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3041) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3042[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3042( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3043( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3042) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3043[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3043( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3044( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3043) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3044[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3044( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3045( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3044) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3045[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3045( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3046( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3045) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3046[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3046( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3047( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3046) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3047[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3047( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3048( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3047) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3048[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3048( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3049( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3048) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3049[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3049( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3050( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3049) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3050[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3050( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3051( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3050) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3051[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3051( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3052( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3051) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3052[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3052( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3053( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3052) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3053[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3053( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3054( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3053) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3054[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3054( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3055( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3054) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3055[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3055( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3056( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3055) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3056[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3056( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3057( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3056) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3057[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3057( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3058( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3057) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3058[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3058( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3059( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3058) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3059[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3059( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3060( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3059) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3060[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3060( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3061( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3060) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3061[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3061( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3062( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3061) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3062[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3062( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3063( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3062) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3063[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3063( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3064( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3063) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3064[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3064( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3065( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3064) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3065[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3065( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3066( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3065) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3066[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3066( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3067( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3066) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3067[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3067( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3068( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3067) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3068[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3068( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3069( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3068) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3069[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3069( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3070( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3069) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3070[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3070( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3071( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3070) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3071[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3071( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3072( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3071) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3072[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3072( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3073( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3072) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3073[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3073( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3074( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3073) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3074[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3074( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3075( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3074) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3075[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3075( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3076( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3075) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3076[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3076( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3077( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3076) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3077[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3077( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3078( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3077) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3078[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3078( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3079( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3078) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3079[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3079( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3080( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3079) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3080[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3080( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3081( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3080) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3081[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3081( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3082( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3081) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3082[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3082( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3083( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3082) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3083[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3083( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3084( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3083) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3084[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3084( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3085( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3084) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3085[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3085( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3086( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3085) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3086[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3086( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3087( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3086) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3087[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3087( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3088( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3087) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3088[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3088( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3089( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3088) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3089[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3089( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3090( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3089) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3090[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3090( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3091( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3090) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3091[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3091( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3092( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3091) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3092[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3092( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3093( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3092) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3093[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3093( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3094( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3093) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3094[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3094( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3095( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3094) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3095[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3095( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3096( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3095) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3096[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3096( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3097( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3096) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3097[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3097( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3098( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3097) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3098[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3098( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3099( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3098) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3099[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3099( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3100( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3099) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3100[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3100( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3101( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3100) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3101[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3101( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3102( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3101) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3102[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3102( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3103( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3102) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3103[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3103( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3104( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3103) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3104[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3104( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3105( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3104) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3105[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3105( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3106( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3105) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3106[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3106( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3107( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3106) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3107[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3107( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3108( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3107) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3108[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3108( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3109( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3108) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3109[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3109( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3110( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3109) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3110[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3110( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3111( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3110) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3111[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3111( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3112( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3111) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3112[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3112( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3113( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3112) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3113[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3113( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3114( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3113) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3114[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3114( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3115( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3114) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3115[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3115( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3116( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3115) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3116[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3116( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3117( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3116) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3117[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3117( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3118( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3117) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3118[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3118( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3119( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3118) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3119[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3119( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3120( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3119) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3120[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3120( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3121( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3120) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3121[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3121( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3122( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3121) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3122[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3122( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3123( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3122) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3123[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3123( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3124( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3123) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3124[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3124( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3125( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3124) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3125[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3125( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3126( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3125) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3126[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3126( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3127( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3126) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3127[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3127( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3128( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3127) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3128[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3128( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3129( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3128) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3129[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3129( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3130( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3129) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3130[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3130( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3131( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3130) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3131[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3131( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3132( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3131) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3132[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3132( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3133( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3132) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3133[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3133( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3134( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3133) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3134[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3134( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3135( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3134) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3135[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3135( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3136( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3135) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3136[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3136( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3137( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3136) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3137[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3137( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3138( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3137) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3138[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3138( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3139( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3138) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3139[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3139( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3140( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3139) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3140[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3140( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3141( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3140) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3141[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3141( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3142( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3141) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3142[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3142( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3143( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3142) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3143[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3143( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3144( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3143) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3144[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3144( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3145( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3144) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3145[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3145( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3146( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3145) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3146[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3146( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3147( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3146) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3147[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3147( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3148( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3147) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3148[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3148( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3149( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3148) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3149[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3149( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3150( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3149) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3150[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3150( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3151( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3150) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3151[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3151( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3152( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3151) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3152[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3152( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3153( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3152) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3153[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3153( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3154( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3153) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3154[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3154( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3155( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3154) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3155[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3155( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3156( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3155) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3156[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3156( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3157( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3156) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3157[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3157( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3158( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3157) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3158[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3158( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3159( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3158) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3159[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3159( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3160( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3159) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3160[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3160( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3161( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3160) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3161[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3161( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3162( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3161) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3162[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3162( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3163( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3162) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3163[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3163( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3164( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3163) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3164[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3164( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3165( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3164) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3165[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3165( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3166( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3165) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3166[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3166( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3167( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3166) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3167[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3167( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3168( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3167) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3168[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3168( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3169( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3168) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3169[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3169( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3170( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3169) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3170[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3170( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3171( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3170) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3171[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3171( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3172( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3171) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3172[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3172( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3173( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3172) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3173[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3173( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3174( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3173) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3174[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3174( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3175( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3174) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3175[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3175( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3176( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3175) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3176[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3176( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3177( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3176) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3177[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3177( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3178( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3177) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3178[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3178( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3179( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3178) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3179[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3179( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3180( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3179) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3180[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3180( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3181( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3180) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3181[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3181( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3182( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3181) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3182[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3182( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3183( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3182) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3183[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3183( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3184( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3183) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3184[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3184( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3185( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3184) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3185[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3185( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3186( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3185) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3186[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3186( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3187( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3186) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3187[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3187( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3188( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3187) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3188[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3188( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3189( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3188) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3189[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3189( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3190( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3189) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3190[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3190( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3191( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3190) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3191[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3191( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3192( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3191) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3192[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3192( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3193( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3192) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3193[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3193( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3194( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3193) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3194[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3194( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3195( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3194) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3195[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3195( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3196( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3195) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3196[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3196( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3197( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3196) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3197[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3197( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3198( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3197) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3198[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3198( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3199( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3198) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3199[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3199( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3200( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3199) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3200[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3200( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3201( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3200) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3201[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3201( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3202( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3201) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3202[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3202( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3203( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3202) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3203[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3203( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3204( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3203) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3204[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3204( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3205( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3204) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3205[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3205( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3206( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3205) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3206[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3206( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3207( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3206) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3207[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3207( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3208( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3207) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3208[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3208( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3209( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3208) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3209[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3209( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3210( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3209) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3210[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3210( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3211( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3210) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3211[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3211( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3212( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3211) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3212[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3212( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3213( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3212) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3213[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3213( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3214( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3213) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3214[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3214( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3215( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3214) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3215[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3215( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3216( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3215) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3216[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3216( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3217( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3216) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3217[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3217( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3218( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3217) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3218[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3218( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3219( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3218) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3219[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3219( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3220( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3219) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3220[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3220( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3221( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3220) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3221[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3221( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3222( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3221) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3222[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3222( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3223( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3222) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3223[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3223( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3224( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3223) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3224[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3224( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3225( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3224) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3225[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3225( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3226( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3225) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3226[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3226( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3227( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3226) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3227[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3227( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3228( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3227) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3228[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3228( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3229( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3228) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3229[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3229( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3230( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3229) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3230[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3230( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3231( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3230) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3231[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3231( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3232( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3231) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3232[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3232( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3233( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3232) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3233[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3233( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3234( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3233) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3234[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3234( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3235( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3234) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3235[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3235( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3236( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3235) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3236[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3236( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3237( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3236) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3237[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3237( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3238( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3237) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3238[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3238( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3239( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3238) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3239[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3239( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3240( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3239) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3240[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3240( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3241( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3240) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3241[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3241( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3242( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3241) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3242[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3242( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3243( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3242) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3243[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3243( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3244( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3243) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3244[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3244( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3245( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3244) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3245[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3245( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3246( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3245) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3246[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3246( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3247( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3246) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3247[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3247( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3248( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3247) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3248[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3248( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3249( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3248) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3249[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3249( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3250( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3249) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3250[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3250( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3251( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3250) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3251[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3251( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3252( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3251) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3252[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3252( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3253( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3252) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3253[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3253( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3254( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3253) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3254[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3254( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3255( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3254) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3255[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3255( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3256( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3255) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3256[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3256( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3257( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3256) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3257[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3257( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3258( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3257) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3258[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3258( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3259( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3258) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3259[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3259( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3260( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3259) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3260[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3260( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3261( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3260) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3261[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3261( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3262( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3261) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3262[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3262( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3263( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3262) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3263[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3263( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3264( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3263) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3264[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3264( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3265( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3264) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3265[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3265( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3266( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3265) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3266[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3266( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3267( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3266) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3267[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3267( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3268( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3267) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3268[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3268( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3269( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3268) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3269[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3269( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3270( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3269) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3270[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3270( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3271( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3270) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3271[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3271( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3272( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3271) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3272[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3272( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3273( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3272) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3273[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3273( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3274( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3273) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3274[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3274( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3275( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3274) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3275[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3275( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3276( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3275) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3276[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3276( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3277( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3276) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3277[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3277( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3278( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3277) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3278[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3278( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3279( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3278) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3279[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3279( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3280( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3279) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3280[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3280( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3281( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3280) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3281[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3281( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3282( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3281) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3282[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3282( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3283( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3282) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3283[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3283( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3284( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3283) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3284[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3284( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3285( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3284) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3285[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3285( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3286( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3285) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3286[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3286( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3287( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3286) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3287[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3287( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3288( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3287) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3288[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3288( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3289( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3288) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3289[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3289( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3290( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3289) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3290[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3290( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3291( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3290) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3291[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3291( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3292( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3291) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3292[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3292( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3293( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3292) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3293[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3293( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3294( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3293) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3294[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3294( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3295( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3294) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3295[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3295( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3296( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3295) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3296[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3296( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3297( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3296) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3297[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3297( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3298( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3297) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3298[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3298( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3299( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3298) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3299[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3299( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3300( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3299) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3300[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3300( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3301( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3300) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3301[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3301( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3302( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3301) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3302[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3302( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3303( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3302) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3303[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3303( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3304( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3303) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3304[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3304( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3305( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3304) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3305[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3305( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3306( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3305) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3306[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3306( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3307( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3306) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3307[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3307( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3308( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3307) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3308[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3308( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3309( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3308) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3309[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3309( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3310( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3309) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3310[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3310( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3311( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3310) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3311[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3311( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3312( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3311) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3312[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3312( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3313( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3312) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3313[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3313( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3314( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3313) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3314[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3314( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3315( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3314) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3315[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3315( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3316( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3315) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3316[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3316( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3317( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3316) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3317[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3317( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3318( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3317) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3318[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3318( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3319( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3318) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3319[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3319( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3320( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3319) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3320[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3320( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3321( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3320) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3321[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3321( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3322( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3321) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3322[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3322( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3323( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3322) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3323[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3323( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3324( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3323) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3324[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3324( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3325( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3324) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3325[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3325( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3326( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3325) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3326[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3326( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3327( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3326) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3327[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3327( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3328( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3327) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3328[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3328( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3329( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3328) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3329[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3329( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3330( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3329) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3330[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3330( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3331( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3330) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3331[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3331( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3332( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3331) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3332[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3332( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3333( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3332) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3333[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3333( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3334( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3333) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3334[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3334( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3335( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3334) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3335[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3335( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3336( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3335) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3336[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3336( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3337( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3336) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3337[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3337( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3338( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3337) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3338[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3338( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3339( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3338) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3339[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3339( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3340( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3339) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3340[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3340( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3341( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3340) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3341[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3341( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3342( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3341) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3342[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3342( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3343( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3342) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3343[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3343( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3344( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3343) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3344[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3344( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3345( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3344) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3345[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3345( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3346( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3345) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3346[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3346( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3347( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3346) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3347[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3347( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3348( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3347) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3348[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3348( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3349( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3348) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3349[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3349( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3350( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3349) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3350[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3350( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3351( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3350) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3351[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3351( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3352( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3351) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3352[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3352( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3353( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3352) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3353[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3353( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3354( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3353) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3354[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3354( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3355( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3354) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3355[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3355( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3356( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3355) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3356[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3356( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3357( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3356) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3357[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3357( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3358( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3357) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3358[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3358( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3359( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3358) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3359[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3359( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3360( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3359) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3360[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3360( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3361( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3360) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3361[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3361( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3362( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3361) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3362[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3362( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3363( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3362) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3363[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3363( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3364( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3363) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3364[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3364( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3365( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3364) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3365[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3365( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3366( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3365) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3366[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3366( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3367( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3366) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3367[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3367( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3368( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3367) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3368[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3368( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3369( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3368) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3369[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3369( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3370( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3369) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3370[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3370( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3371( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3370) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3371[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3371( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3372( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3371) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3372[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3372( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3373( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3372) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3373[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3373( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3374( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3373) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3374[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3374( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3375( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3374) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3375[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3375( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3376( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3375) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3376[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3376( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3377( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3376) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3377[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3377( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3378( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3377) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3378[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3378( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3379( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3378) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3379[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3379( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3380( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3379) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3380[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3380( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3381( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3380) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3381[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3381( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3382( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3381) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3382[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3382( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3383( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3382) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3383[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3383( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3384( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3383) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3384[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3384( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3385( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3384) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3385[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3385( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3386( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3385) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3386[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3386( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3387( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3386) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3387[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3387( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3388( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3387) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3388[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3388( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3389( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3388) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3389[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3389( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3390( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3389) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3390[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3390( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3391( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3390) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3391[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3391( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3392( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3391) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3392[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3392( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3393( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3392) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3393[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3393( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3394( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3393) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3394[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3394( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3395( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3394) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3395[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3395( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3396( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3395) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3396[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3396( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3397( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3396) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3397[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3397( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3398( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3397) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3398[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3398( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3399( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3398) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3399[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3399( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3400( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3399) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3400[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3400( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3401( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3400) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3401[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3401( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3402( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3401) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3402[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3402( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3403( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3402) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3403[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3403( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3404( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3403) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3404[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3404( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3405( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3404) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3405[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3405( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3406( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3405) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3406[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3406( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3407( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3406) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3407[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3407( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3408( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3407) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3408[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3408( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3409( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3408) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3409[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3409( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3410( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3409) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3410[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3410( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3411( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3410) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3411[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3411( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3412( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3411) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3412[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3412( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3413( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3412) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3413[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3413( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3414( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3413) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3414[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3414( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3415( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3414) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3415[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3415( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3416( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3415) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3416[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3416( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3417( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3416) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3417[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3417( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3418( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3417) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3418[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3418( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3419( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3418) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3419[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3419( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3420( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3419) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3420[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3420( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3421( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3420) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3421[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3421( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3422( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3421) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3422[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3422( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3423( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3422) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3423[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3423( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3424( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3423) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3424[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3424( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3425( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3424) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3425[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3425( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3426( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3425) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3426[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3426( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3427( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3426) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3427[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3427( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3428( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3427) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3428[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3428( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3429( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3428) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3429[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3429( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3430( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3429) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3430[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3430( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3431( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3430) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3431[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3431( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3432( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3431) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3432[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3432( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3433( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3432) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3433[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3433( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3434( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3433) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3434[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3434( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3435( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3434) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3435[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3435( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3436( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3435) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3436[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3436( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3437( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3436) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3437[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3437( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3438( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3437) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3438[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3438( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3439( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3438) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3439[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3439( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3440( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3439) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3440[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3440( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3441( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3440) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3441[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3441( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3442( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3441) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3442[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3442( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3443( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3442) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3443[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3443( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3444( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3443) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3444[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3444( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3445( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3444) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3445[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3445( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3446( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3445) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3446[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3446( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3447( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3446) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3447[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3447( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3448( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3447) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3448[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3448( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3449( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3448) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3449[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3449( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3450( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3449) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3450[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3450( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3451( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3450) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3451[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3451( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3452( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3451) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3452[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3452( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3453( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3452) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3453[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3453( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3454( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3453) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3454[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3454( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3455( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3454) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3455[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3455( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3456( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3455) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3456[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3456( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3457( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3456) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3457[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3457( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3458( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3457) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3458[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3458( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3459( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3458) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3459[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3459( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3460( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3459) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3460[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3460( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3461( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3460) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3461[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3461( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3462( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3461) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3462[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3462( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3463( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3462) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3463[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3463( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3464( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3463) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3464[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3464( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3465( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3464) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3465[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3465( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3466( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3465) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3466[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3466( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3467( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3466) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3467[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3467( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3468( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3467) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3468[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3468( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3469( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3468) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3469[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3469( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3470( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3469) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3470[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3470( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3471( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3470) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3471[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3471( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3472( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3471) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3472[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3472( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3473( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3472) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3473[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3473( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3474( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3473) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3474[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3474( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3475( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3474) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3475[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3475( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3476( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3475) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3476[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3476( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3477( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3476) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3477[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3477( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3478( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3477) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3478[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3478( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3479( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3478) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3479[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3479( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3480( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3479) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3480[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3480( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3481( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3480) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3481[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3481( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3482( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3481) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3482[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3482( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3483( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3482) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3483[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3483( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3484( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3483) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3484[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3484( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3485( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3484) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3485[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3485( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3486( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3485) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3486[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3486( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3487( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3486) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3487[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3487( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3488( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3487) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3488[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3488( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3489( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3488) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3489[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3489( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3490( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3489) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3490[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3490( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3491( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3490) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3491[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3491( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3492( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3491) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3492[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3492( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3493( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3492) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3493[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3493( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3494( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3493) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3494[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3494( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3495( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3494) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3495[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3495( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3496( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3495) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3496[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3496( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3497( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3496) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3497[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3497( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3498( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3497) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3498[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3498( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3499( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3498) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3499[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3499( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3500( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3499) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3500[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3500( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3501( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3500) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3501[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3501( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3502( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3501) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3502[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3502( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3503( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3502) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3503[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3503( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3504( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3503) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3504[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3504( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3505( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3504) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3505[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3505( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3506( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3505) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3506[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3506( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3507( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3506) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3507[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3507( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3508( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3507) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3508[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3508( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3509( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3508) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3509[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3509( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3510( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3509) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3510[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3510( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3511( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3510) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3511[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3511( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3512( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3511) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3512[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3512( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3513( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3512) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3513[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3513( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3514( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3513) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3514[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3514( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3515( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3514) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3515[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3515( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3516( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3515) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3516[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3516( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3517( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3516) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3517[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3517( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3518( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3517) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3518[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3518( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3519( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3518) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3519[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3519( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3520( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3519) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3520[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3520( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3521( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3520) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3521[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3521( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3522( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3521) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3522[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3522( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3523( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3522) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3523[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3523( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3524( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3523) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3524[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3524( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3525( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3524) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3525[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3525( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3526( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3525) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3526[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3526( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3527( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3526) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3527[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3527( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3528( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3527) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3528[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3528( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3529( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3528) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3529[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3529( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3530( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3529) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3530[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3530( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3531( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3530) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3531[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3531( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3532( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3531) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3532[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3532( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3533( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3532) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3533[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3533( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3534( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3533) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3534[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3534( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3535( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3534) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3535[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3535( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3536( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3535) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3536[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3536( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3537( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3536) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3537[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3537( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3538( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3537) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3538[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3538( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3539( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3538) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3539[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3539( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3540( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3539) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3540[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3540( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3541( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3540) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3541[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3541( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3542( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3541) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3542[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3542( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3543( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3542) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3543[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3543( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3544( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3543) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3544[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3544( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3545( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3544) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3545[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3545( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3546( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3545) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3546[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3546( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3547( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3546) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3547[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3547( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3548( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3547) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3548[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3548( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3549( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3548) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3549[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3549( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3550( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3549) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3550[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3550( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3551( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3550) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3551[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3551( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3552( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3551) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3552[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3552( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3553( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3552) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3553[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3553( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3554( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3553) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3554[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3554( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3555( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3554) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3555[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3555( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3556( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3555) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3556[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3556( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3557( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3556) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3557[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3557( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3558( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3557) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3558[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3558( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3559( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3558) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3559[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3559( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3560( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3559) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3560[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3560( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3561( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3560) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3561[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3561( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3562( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3561) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3562[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3562( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3563( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3562) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3563[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3563( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3564( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3563) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3564[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3564( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3565( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3564) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3565[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3565( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3566( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3565) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3566[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3566( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3567( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3566) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3567[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3567( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3568( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3567) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3568[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3568( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3569( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3568) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3569[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3569( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3570( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3569) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3570[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3570( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3571( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3570) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3571[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3571( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3572( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3571) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3572[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3572( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3573( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3572) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3573[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3573( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3574( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3573) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3574[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3574( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3575( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3574) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3575[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3575( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3576( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3575) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3576[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3576( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3577( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3576) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3577[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3577( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3578( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3577) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3578[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3578( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3579( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3578) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3579[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3579( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3580( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3579) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3580[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3580( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3581( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3580) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3581[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3581( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3582( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3581) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3582[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3582( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3583( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3582) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3583[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3583( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3584( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3583) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3584[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3584( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3585( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3584) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3585[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3585( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3586( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3585) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3586[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3586( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3587( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3586) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3587[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3587( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3588( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3587) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3588[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3588( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3589( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3588) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3589[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3589( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3590( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3589) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3590[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3590( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3591( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3590) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3591[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3591( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3592( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3591) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3592[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3592( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3593( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3592) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3593[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3593( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3594( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3593) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3594[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3594( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3595( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3594) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3595[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3595( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3596( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3595) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3596[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3596( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3597( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3596) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3597[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3597( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3598( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3597) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3598[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3598( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3599( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3598) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3599[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3599( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3600( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3599) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3600[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3600( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3601( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3600) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3601[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3601( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3602( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3601) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3602[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3602( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3603( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3602) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3603[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3603( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3604( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3603) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3604[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3604( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3605( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3604) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3605[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3605( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3606( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3605) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3606[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3606( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3607( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3606) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3607[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3607( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3608( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3607) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3608[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3608( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3609( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3608) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3609[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3609( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3610( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3609) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3610[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3610( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3611( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3610) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3611[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3611( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3612( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3611) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3612[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3612( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3613( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3612) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3613[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3613( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3614( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3613) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3614[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3614( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3615( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3614) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3615[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3615( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3616( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3615) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3616[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3616( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3617( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3616) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3617[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3617( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3618( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3617) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3618[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3618( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3619( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3618) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3619[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3619( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3620( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3619) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3620[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3620( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3621( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3620) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3621[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3621( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3622( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3621) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3622[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3622( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3623( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3622) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3623[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3623( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3624( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3623) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3624[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3624( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3625( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3624) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3625[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3625( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3626( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3625) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3626[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3626( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3627( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3626) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3627[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3627( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3628( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3627) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3628[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3628( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3629( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3628) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3629[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3629( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3630( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3629) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3630[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3630( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3631( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3630) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3631[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3631( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3632( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3631) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3632[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3632( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3633( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3632) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3633[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3633( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3634( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3633) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3634[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3634( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3635( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3634) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3635[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3635( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3636( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3635) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3636[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3636( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3637( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3636) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3637[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3637( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3638( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3637) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3638[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3638( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3639( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3638) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3639[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3639( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3640( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3639) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3640[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3640( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3641( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3640) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3641[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3641( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3642( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3641) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3642[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3642( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3643( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3642) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3643[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3643( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3644( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3643) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3644[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3644( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3645( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3644) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3645[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3645( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3646( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3645) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3646[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3646( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3647( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3646) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3647[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3647( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3648( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3647) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3648[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3648( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3649( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3648) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3649[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3649( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3650( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3649) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3650[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3650( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3651( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3650) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3651[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3651( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3652( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3651) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3652[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3652( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3653( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3652) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3653[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3653( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3654( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3653) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3654[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3654( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3655( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3654) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3655[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3655( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3656( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3655) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3656[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3656( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3657( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3656) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3657[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3657( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3658( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3657) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3658[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3658( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3659( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3658) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3659[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3659( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3660( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3659) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3660[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3660( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3661( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3660) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3661[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3661( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3662( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3661) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3662[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3662( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3663( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3662) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3663[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3663( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3664( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3663) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3664[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3664( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3665( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3664) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3665[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3665( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3666( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3665) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3666[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3666( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3667( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3666) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3667[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3667( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3668( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3667) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3668[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3668( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3669( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3668) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3669[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3669( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3670( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3669) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3670[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3670( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3671( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3670) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3671[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3671( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3672( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3671) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3672[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3672( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3673( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3672) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3673[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3673( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3674( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3673) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3674[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3674( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3675( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3674) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3675[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3675( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3676( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3675) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3676[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3676( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3677( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3676) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3677[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3677( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3678( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3677) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3678[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3678( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3679( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3678) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3679[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3679( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3680( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3679) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3680[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3680( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3681( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3680) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3681[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3681( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3682( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3681) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3682[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3682( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3683( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3682) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3683[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3683( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3684( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3683) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3684[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3684( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3685( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3684) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3685[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3685( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3686( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3685) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3686[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3686( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3687( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3686) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3687[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3687( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3688( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3687) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3688[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3688( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3689( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3688) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3689[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3689( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3690( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3689) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3690[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3690( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3691( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3690) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3691[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3691( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3692( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3691) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3692[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3692( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3693( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3692) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3693[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3693( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3694( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3693) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3694[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3694( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3695( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3694) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3695[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3695( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3696( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3695) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3696[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3696( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3697( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3696) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3697[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3697( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3698( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3697) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3698[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3698( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3699( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3698) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3699[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3699( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3700( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3699) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3700[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3700( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3701( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3700) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3701[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3701( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3702( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3701) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3702[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3702( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3703( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3702) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3703[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3703( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3704( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3703) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3704[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3704( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3705( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3704) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3705[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3705( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3706( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3705) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3706[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3706( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3707( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3706) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3707[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3707( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3708( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3707) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3708[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3708( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3709( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3708) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3709[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3709( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3710( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3709) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3710[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3710( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3711( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3710) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3711[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3711( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3712( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3711) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3712[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3712( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3713( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3712) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3713[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3713( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3714( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3713) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3714[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3714( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3715( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3714) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3715[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3715( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3716( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3715) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3716[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3716( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3717( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3716) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3717[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3717( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3718( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3717) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3718[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3718( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3719( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3718) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3719[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3719( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3720( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3719) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3720[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3720( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3721( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3720) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3721[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3721( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3722( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3721) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3722[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3722( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3723( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3722) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3723[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3723( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3724( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3723) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3724[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3724( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3725( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3724) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3725[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3725( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3726( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3725) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3726[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3726( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3727( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3726) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3727[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3727( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3728( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3727) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3728[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3728( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3729( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3728) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3729[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3729( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3730( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3729) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3730[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3730( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3731( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3730) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3731[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3731( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3732( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3731) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3732[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3732( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3733( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3732) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3733[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3733( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3734( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3733) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3734[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3734( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3735( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3734) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3735[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3735( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3736( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3735) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3736[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3736( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3737( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3736) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3737[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3737( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3738( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3737) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3738[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3738( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3739( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3738) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3739[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3739( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3740( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3739) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3740[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3740( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3741( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3740) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3741[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3741( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3742( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3741) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3742[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3742( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3743( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3742) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3743[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3743( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3744( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3743) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3744[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3744( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3745( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3744) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3745[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3745( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3746( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3745) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3746[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3746( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3747( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3746) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3747[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3747( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3748( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3747) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3748[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3748( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3749( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3748) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3749[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3749( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3750( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3749) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3750[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3750( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3751( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3750) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3751[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3751( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3752( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3751) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3752[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3752( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3753( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3752) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3753[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3753( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3754( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3753) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3754[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3754( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3755( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3754) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3755[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3755( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3756( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3755) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3756[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3756( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3757( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3756) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3757[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3757( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3758( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3757) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3758[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3758( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3759( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3758) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3759[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3759( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3760( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3759) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3760[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3760( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3761( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3760) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3761[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3761( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3762( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3761) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3762[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3762( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3763( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3762) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3763[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3763( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3764( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3763) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3764[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3764( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3765( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3764) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3765[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3765( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3766( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3765) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3766[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3766( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3767( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3766) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3767[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3767( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3768( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3767) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3768[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3768( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3769( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3768) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3769[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3769( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3770( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3769) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3770[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3770( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3771( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3770) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3771[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3771( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3772( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3771) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3772[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3772( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3773( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3772) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3773[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3773( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3774( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3773) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3774[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3774( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3775( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3774) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3775[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3775( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3776( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3775) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3776[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3776( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3777( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3776) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3777[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3777( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3778( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3777) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3778[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3778( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3779( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3778) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3779[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3779( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3780( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3779) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3780[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3780( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3781( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3780) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3781[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3781( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3782( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3781) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3782[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3782( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3783( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3782) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3783[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3783( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3784( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3783) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3784[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3784( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3785( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3784) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3785[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3785( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3786( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3785) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3786[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3786( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3787( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3786) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3787[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3787( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3788( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3787) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3788[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3788( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3789( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3788) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3789[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3789( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3790( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3789) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3790[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3790( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3791( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3790) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3791[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3791( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3792( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3791) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3792[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3792( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3793( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3792) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3793[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3793( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3794( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3793) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3794[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3794( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3795( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3794) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3795[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3795( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3796( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3795) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3796[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3796( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3797( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3796) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3797[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3797( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3798( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3797) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3798[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3798( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3799( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3798) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3799[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3799( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3800( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3799) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3800[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3800( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3801( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3800) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3801[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3801( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3802( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3801) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3802[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3802( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3803( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3802) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3803[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3803( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3804( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3803) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3804[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3804( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3805( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3804) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3805[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3805( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3806( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3805) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3806[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3806( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3807( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3806) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3807[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3807( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3808( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3807) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3808[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3808( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3809( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3808) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3809[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3809( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3810( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3809) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3810[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3810( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3811( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3810) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3811[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3811( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3812( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3811) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3812[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3812( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3813( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3812) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3813[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3813( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3814( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3813) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3814[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3814( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3815( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3814) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3815[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3815( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3816( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3815) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3816[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3816( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3817( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3816) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3817[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3817( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3818( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3817) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3818[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3818( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3819( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3818) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3819[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3819( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3820( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3819) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3820[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3820( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3821( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3820) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3821[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3821( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3822( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3821) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3822[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3822( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3823( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3822) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3823[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3823( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3824( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3823) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3824[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3824( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3825( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3824) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3825[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3825( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3826( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3825) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3826[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3826( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3827( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3826) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3827[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3827( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3828( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3827) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3828[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3828( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3829( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3828) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3829[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3829( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3830( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3829) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3830[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3830( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3831( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3830) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3831[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3831( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3832( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3831) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3832[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3832( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3833( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3832) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3833[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3833( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3834( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3833) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3834[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3834( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3835( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3834) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3835[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3835( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3836( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3835) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3836[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3836( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3837( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3836) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3837[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3837( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3838( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3837) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3838[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3838( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3839( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3838) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3839[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3839( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3840( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3839) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3840[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3840( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3841( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3840) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3841[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3841( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3842( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3841) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3842[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3842( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3843( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3842) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3843[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3843( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3844( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3843) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3844[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3844( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3845( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3844) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3845[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3845( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3846( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3845) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3846[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3846( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3847( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3846) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3847[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3847( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3848( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3847) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3848[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3848( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3849( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3848) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3849[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3849( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3850( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3849) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3850[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3850( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3851( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3850) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3851[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3851( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3852( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3851) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3852[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3852( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3853( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3852) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3853[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3853( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3854( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3853) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3854[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3854( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3855( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3854) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3855[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3855( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3856( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3855) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3856[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3856( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3857( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3856) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3857[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3857( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3858( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3857) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3858[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3858( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3859( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3858) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3859[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3859( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3860( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3859) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3860[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3860( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3861( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3860) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3861[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3861( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3862( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3861) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3862[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3862( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3863( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3862) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3863[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3863( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3864( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3863) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3864[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3864( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3865( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3864) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3865[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3865( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3866( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3865) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3866[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3866( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3867( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3866) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3867[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3867( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3868( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3867) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3868[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3868( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3869( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3868) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3869[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3869( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3870( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3869) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3870[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3870( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3871( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3870) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3871[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3871( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3872( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3871) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3872[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3872( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3873( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3872) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3873[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3873( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3874( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3873) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3874[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3874( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3875( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3874) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3875[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3875( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3876( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3875) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3876[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3876( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3877( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3876) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3877[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3877( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3878( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3877) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3878[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3878( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3879( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3878) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3879[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3879( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3880( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3879) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3880[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3880( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3881( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3880) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3881[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3881( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3882( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3881) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3882[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3882( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3883( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3882) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3883[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3883( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3884( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3883) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3884[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3884( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3885( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3884) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3885[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3885( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3886( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3885) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3886[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3886( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3887( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3886) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3887[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3887( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3888( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3887) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3888[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3888( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3889( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3888) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3889[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3889( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3890( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3889) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3890[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3890( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3891( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3890) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3891[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3891( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3892( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3891) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3892[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3892( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3893( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3892) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3893[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3893( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3894( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3893) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3894[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3894( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3895( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3894) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3895[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3895( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3896( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3895) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3896[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3896( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3897( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3896) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3897[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3897( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3898( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3897) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3898[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3898( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3899( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3898) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3899[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3899( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3900( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3899) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3900[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3900( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3901( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3900) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3901[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3901( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3902( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3901) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3902[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3902( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3903( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3902) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3903[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3903( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3904( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3903) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3904[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3904( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3905( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3904) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3905[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3905( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3906( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3905) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3906[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3906( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3907( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3906) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3907[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3907( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3908( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3907) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3908[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3908( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3909( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3908) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3909[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3909( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3910( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3909) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3910[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3910( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3911( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3910) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3911[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3911( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3912( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3911) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3912[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3912( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3913( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3912) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3913[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3913( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3914( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3913) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3914[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3914( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3915( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3914) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3915[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3915( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3916( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3915) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3916[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3916( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3917( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3916) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3917[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3917( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3918( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3917) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3918[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3918( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3919( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3918) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3919[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3919( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3920( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3919) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3920[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3920( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3921( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3920) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3921[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3921( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3922( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3921) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3922[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3922( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3923( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3922) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3923[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3923( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3924( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3923) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3924[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3924( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3925( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3924) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3925[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3925( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3926( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3925) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3926[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3926( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3927( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3926) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3927[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3927( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3928( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3927) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3928[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3928( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3929( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3928) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3929[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3929( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3930( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3929) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3930[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3930( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3931( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3930) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3931[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3931( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3932( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3931) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3932[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3932( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3933( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3932) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3933[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3933( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3934( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3933) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3934[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3934( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3935( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3934) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3935[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3935( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3936( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3935) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3936[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3936( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3937( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3936) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3937[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3937( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3938( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3937) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3938[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3938( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3939( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3938) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3939[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3939( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3940( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3939) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3940[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3940( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3941( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3940) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3941[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3941( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3942( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3941) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3942[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3942( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3943( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3942) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3943[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3943( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3944( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3943) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3944[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3944( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3945( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3944) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3945[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3945( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3946( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3945) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3946[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3946( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3947( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3946) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3947[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3947( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3948( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3947) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3948[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3948( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3949( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3948) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3949[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3949( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3950( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3949) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3950[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3950( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3951( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3950) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3951[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3951( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3952( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3951) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3952[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3952( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3953( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3952) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3953[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3953( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3954( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3953) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3954[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3954( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3955( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3954) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3955[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3955( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3956( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3955) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3956[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3956( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3957( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3956) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3957[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3957( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3958( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3957) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3958[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3958( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3959( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3958) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3959[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3959( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3960( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3959) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3960[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3960( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3961( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3960) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3961[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3961( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3962( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3961) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3962[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3962( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3963( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3962) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3963[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3963( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3964( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3963) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3964[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3964( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3965( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3964) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3965[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3965( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3966( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3965) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3966[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3966( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3967( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3966) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3967[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3967( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3968( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3967) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3968[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3968( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3969( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3968) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3969[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3969( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3970( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3969) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3970[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3970( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3971( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3970) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3971[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3971( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3972( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3971) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3972[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3972( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3973( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3972) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3973[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3973( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3974( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3973) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3974[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3974( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3975( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3974) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3975[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3975( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3976( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3975) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3976[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3976( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3977( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3976) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3977[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3977( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3978( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3977) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3978[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3978( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3979( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3978) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3979[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3979( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3980( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3979) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3980[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3980( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3981( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3980) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3981[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3981( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3982( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3981) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3982[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3982( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3983( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3982) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3983[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3983( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3984( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3983) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3984[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3984( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3985( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3984) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3985[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3985( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3986( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3985) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3986[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3986( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3987( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3986) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3987[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3987( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3988( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3987) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3988[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3988( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3989( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3988) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3989[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3989( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3990( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3989) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3990[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3990( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3991( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3990) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3991[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3991( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3992( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3991) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3992[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3992( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3993( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3992) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3993[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3993( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3994( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3993) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3994[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3994( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3995( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3994) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3995[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3995( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3996( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3995) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3996[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3996( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3997( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3996) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3997[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3997( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3998( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3997) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3998[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3998( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc3999( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3998) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

DATA_PLACE char szMyPi3999[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc3999( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = ThisFunc0( inVar, priorPiSum, knownPiSum );
  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi3999) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}

// Terminate Function Here
DATA_PLACE char szMyPi0[]="314159265358979323846264338327950288419716939937510582097494";
CODE_PLACE uint32_t ThisFunc0( uint32_t inVar, uint32_t priorPiSum, const uint32_t *knownPiSum ) { 
  uint32_t outVar = 0;

  uint32_t myPi = seePi( PI_DIGITS, szPi );
  if ( strcmp( szPi, szPiDigits ) )
    Serial.printf( "%cPI FAIL szPiDigits String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( strcmp( szPi, szMyPi0) )
    Serial.printf( "%cPI FAIL szMyPi String pi>>%s in %s%c%c",13, szPi, __FUNCTION__,13,13 );
  if ( myPi == priorPiSum && myPi == *knownPiSum )
    outVar++; 
  else
    Serial.printf( "%cPI FAIL pi SUMS >>%lu %lu %lu in %s%c%c",13, myPi, priorPiSum, *knownPiSum, __FUNCTION__,13,13 );
  return outVar;
}
